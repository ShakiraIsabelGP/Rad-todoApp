{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/controls/pickers.cljc"],"mappings":"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","names":["options__50078__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__62796","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/com","js/com.fulcrologic","js/com.fulcrologic.rad","js/com.fulcrologic.rad.rendering","js/com.fulcrologic.rad.rendering.semantic-ui","js/com.fulcrologic.rad.rendering.semantic-ui.controls","js/com.fulcrologic.rad.rendering.semantic-ui.controls.pickers","js/com.fulcrologic.rad.rendering.semantic-ui.controls.pickers.SimplePicker","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","com.fulcrologic.rad.rendering.semantic-ui.controls.pickers/SimplePicker","_","instance","control-key","this","map__62792","map__62793","props","controls","com.fulcrologic.rad.control.component_controls","query-key","picker-options","com.fulcrologic.rad.picker_options.load_picker_options_BANG_","com.fulcrologic.fulcro.components/react-type","map__62798","label","onChange","disabled?","visible?","action","placeholder","options","user-props","control","or__4126__auto__","com.fulcrologic.rad.picker_options.current_picker_options","com.fulcrologic.rad.options_util._QMARK__BANG_","value","com.fulcrologic.rad.control/current-value","com.fulcrologic.fulcro.dom.macro_create_element","G__62800","com.fulcrologic.rad.rendering.semantic-ui.components/ui-wrapped-dropdown","cljs.core.merge","v","com.fulcrologic.rad.control/set-parameter!","*after-render*-orig-val__62801","*after-render*-temp-val__62802","com.fulcrologic.fulcro.components/*after-render*","com.fulcrologic.rad.rendering.semantic-ui.controls.pickers/render-control","com.fulcrologic.fulcro.components.factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.controls.pickers\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.rad.picker-options :as po]\n    [com.fulcrologic.rad.control :as control]\n    [com.fulcrologic.rad.rendering.semantic-ui.components :refer [ui-wrapped-dropdown]]\n    [com.fulcrologic.rad.options-util :refer [?!]]\n    [taoensso.timbre :as log]\n    #?(:cljs [com.fulcrologic.fulcro.dom :as dom]\n       :clj  [com.fulcrologic.fulcro.dom-server :as dom])))\n\n(defsc SimplePicker [_ {:keys [instance control-key]}]\n  {:shouldComponentUpdate (fn [_ _ _] true)\n   :componentDidMount     (fn [this]\n                            (let [{:keys [instance control-key] :as props} (comp/props this)\n                                  controls (control/component-controls instance)\n                                  {::po/keys [query-key] :as picker-options} (get controls control-key)]\n                              (when query-key\n                                (po/load-picker-options! instance (comp/react-type instance) props picker-options))))}\n  (let [controls (control/component-controls instance)\n        {:keys [label onChange disabled? visible? action placeholder options user-props] :as control} (get controls control-key)\n        options  (or options (po/current-picker-options instance control))]\n    (when control\n      (let [label       (or (?! label instance))\n            disabled?   (?! disabled? instance)\n            placeholder (?! placeholder instance)\n            visible?    (or (nil? visible?) (?! visible? instance))\n            value       (control/current-value instance control-key)]\n        (when visible?\n          (dom/div :.ui.field {:key (str control-key)}\n            (dom/label label)\n            (ui-wrapped-dropdown (merge\n                                   user-props\n                                   {:disabled    disabled?\n                                    :placeholder (str placeholder)\n                                    :options     options\n                                    :value       value\n                                    :onChange    (fn [v]\n                                                   (control/set-parameter! instance control-key v)\n                                                   (binding [comp/*after-render* true]\n                                                     (when onChange\n                                                       (onChange instance v))\n                                                     (when action\n                                                       (action instance))))}))))))))\n\n(def render-control (comp/factory SimplePicker {:keyfn :control-key}))\n\n"]}