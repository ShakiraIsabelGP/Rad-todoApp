{"version":3,"sources":["com/fulcrologic/fulcro/react/version18.cljc"],"mappings":";;;AAQA;;;AAAA,AAAMA;AAAN,AAIK,AAAMC,AAAU,AAAA,AAACC;AAAjB,AAAA,AAAA,AACkB,AAAKE,AAAQC;AAAb,AACE,AAAA,AAAAF,AAAWF;AAAX;AAAA,AACE,AAACK,AAAQL,AAAU,AAACM,AAAsBF;;;AAC5C,AAAS,AAAAF,AAAKF,AAAUG;;AAH1B,AAAAD,AAIGF;AALrB,AAMkB,AAAKG,AAAQC;AAAb,AAAyB,AAACG,AAAuBH,AAAWD;;;AAGnF;;;AAAA,AAAMK,AAEHC;AAFH,AAGW,AAAMT,AAAU,AAAA,AAACC;AAAjB,AACMQ,AACF,AAAA,AAAA,AAAA,AAACC,AAEC,AAAKP,AAAQC,AAKf,AAACM;AALC,AACE,AAAA,AAAAR,AAAWF;AAAX;AAAA,AACE,AAACK,AAAQL,AAAU,AAACM,AAAsBF;;;AAC5C,AAAS,AAAAF,AAAKF,AAAUG;;AAH1B,AAAAD,AAIGF;AACL,AAAA,AAAA,AAEE,AAAKG,AAAQC;AAAb,AAAyB,AAACG,AAAuBH,AAAWD","names":["com.fulcrologic.fulcro.react.version18/react18-options","reactRoot","cljs.core/volatile!","cljs.core/deref","ui-root","mount-node","cljs.core/vreset!","js/module$node_modules$react_dom$client.createRoot","js/module$node_modules$react_dom$client.hydrateRoot","com.fulcrologic.fulcro.react.version18/with-react18","app","cljs.core/assoc-in"],"sourcesContent":["(ns com.fulcrologic.fulcro.react.version18\n  #?@(:cljs\n      [(:require-macros com.fulcrologic.fulcro.react.version18)\n       (:require\n         [com.fulcrologic.fulcro.application]\n         [\"react-dom/client\" :as dom-client]\n         [\"react\" :as react])]))\n\n(defn react18-options\n  \"Returns the options that need to be passed to the Fulcro app constructor. See also `with-react18`.\"\n  []\n  #?(:cljs\n     (let [reactRoot (volatile! nil)]\n       {:render-root!  (fn [ui-root mount-node]\n                         (when-not @reactRoot\n                           (vreset! reactRoot (dom-client/createRoot mount-node)))\n                         (.render ^js @reactRoot ui-root)\n                         @reactRoot)\n        :hydrate-root! (fn [ui-root mount-node] (dom-client/hydrateRoot mount-node ui-root))})\n     :clj {}))\n\n(defn with-react18\n  \"Alters the rendering to support React 18\"\n  [app]\n  #?(:cljs (let [reactRoot (volatile! nil)]\n             (-> app\n               (assoc-in\n                 [:com.fulcrologic.fulcro.application/algorithms :com.fulcrologic.fulcro.algorithm/render-root!]\n                 (fn [ui-root mount-node]\n                   (when-not @reactRoot\n                     (vreset! reactRoot (dom-client/createRoot mount-node)))\n                   (.render ^js @reactRoot ui-root)\n                   @reactRoot))\n               (assoc-in\n                 [:com.fulcrologic.fulcro.application/algorithms :com.fulcrologic.fulcro.algorithm/hydrate-root!]\n                 (fn [ui-root mount-node] (dom-client/hydrateRoot mount-node ui-root)))))\n     :clj  app))\n"]}