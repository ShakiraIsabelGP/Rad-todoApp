{"version":3,"sources":["com/app/ui/todo_forms.cljc"],"mappings":"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","names":["options__50078__auto__","_","props","com.fulcrologic.fulcro.components/wrapped-render","com.fulcrologic.fulcro.components/props","js/com","js/com.app","js/com.app.ui","js/com.app.ui.todo-forms","js/com.app.ui.todo-forms.PriorityQuery","com.fulcrologic.fulcro.components/react-constructor","cljs.core.get","com.fulcrologic.fulcro.components/configure-component!","com.app.ui.todo-forms/PriorityQuery","options__60785__auto__","get-class__60778__auto__","cljs.core.assoc","com.fulcrologic.rad.form/convert-options","com.fulcrologic.rad.options-util/?fix-keys","com.fulcrologic.rad.form/render-layout","js/com.app.ui.todo-forms.TodoForm","com.app.ui.todo-forms/TodoForm","this","com.app.model.todo/id","com.app.model.todo/description","com.app.model.todo/priority","com.app.model.todo/date","com.fulcrologic.rad.type-support.date-time/now","options","cljs.core.mapv","p__63469","map__63470","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","id","label","cljs.core.sort_by","this__61720__auto__","forms__61715__auto__","id-attrs__61716__auto__","cljs.core.keep","p1__61714__61717__auto__","com.fulcrologic.fulcro.components/component-options","cljs.core/vals","cljs.core/vec","cljs.core.into","cljs.core.map","attr__61718__auto__","or__4126__auto__","cljs.core.conj","cljs.core/set","cljs.core.concat","props63472","k__61719__auto__","computed__61721__auto__","com.fulcrologic.fulcro.components/get-computed","com.fulcrologic.rad.report/render-row","com.app.ui.todo-forms/TodoList-Row","js/com.app.ui.todo-forms.TodoList-Row","com.fulcrologic.rad.report/default-compare-rows","com.fulcrologic.rad.report/render-layout","app__61710__auto__","route-params__61711__auto__","com.fulcrologic.rad.report/report-will-enter","params","G__63483","p1__61712__61713__auto__","cljs.core/select-keys","cljs.core.remove","com.fulcrologic.rad.control/control-map->controls","cljs.core/contains?","com.fulcrologic.fulcro.components.get_query","com.fulcrologic.rad.control/Control","js/com.app.ui.todo-forms.TodoList","com.app.ui.todo-forms/TodoList","com.app.model.priority/label","com.app.model.todo/status","p__63479","map__63480","status","com.fulcrologic.fulcro.dom.macro_create_element","com.fulcrologic.fulcro.components.transact_BANG_","G__63482","com.app.model.todo/update-todo-status","cljs.core/not","p__63473","map__63474","p__63476","map__63477","report-instance","com.fulcrologic.rad.form/delete!"],"sourcesContent":["(ns com.app.ui.todo-forms\n  (:require\n    [com.app.model.todo :as todo]\n    [com.app.model.priority :as priority]\n    [com.fulcrologic.rad.picker-options :as picker-options]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.rad.form :as form]\n    [com.fulcrologic.rad.form-options :as fo]\n    [com.fulcrologic.rad.report :as report]\n    [com.fulcrologic.rad.type-support.date-time :as datetime]\n    [com.fulcrologic.rad.report-options :as ro]\n    #?(:cljs [com.fulcrologic.fulcro.dom :as dom ])))\n\n(defsc PriorityQuery [_ _]\n  {:query [:priority/id :priority/label]\n   :ident :priority/id})\n\n(form/defsc-form TodoForm [this props]\n                 {fo/id            todo/id\n                  fo/attributes    [todo/description todo/priority todo/date]\n                  fo/default-values {:todo/date (datetime/now)}\n                  fo/route-prefix  \"todo\"\n                  fo/title         \"Todo Form\"\n                  fo/field-styles  {:todo/priority :pick-one}\n                  fo/field-options {:todo/priority\n                                    {::picker-options/query-key :priority/all-priorities\n                                     ::picker-options/query-component PriorityQuery\n                                     ::picker-options/options-xform\n                                     (fn [_ options]\n                                       (mapv (fn [{:priority/keys [id label]}]\n                                                 {:text (str label) :value [:priority/id id]})\n                                                 (sort-by :priority/label options)))}}\n                  fo/cancel-route    [\"todos\"]})\n\n(report/defsc-report TodoList [this props]\n                     {ro/title               \"Todo list\"\n                      ro/source-attribute    :todo/all-todos\n                      ro/row-pk              todo/id\n                      ro/columns             [todo/description todo/date priority/label todo/status]\n                      ro/column-formatters  {:todo/status (fn [this status {:keys [todo/id]}]\n                                               (dom/input {:type           \"checkbox\"\n                                                           :defaultChecked status\n                                                           :onChange #(comp/transact! this [(todo/update-todo-status {:id id :status (not status) } )])}))}\n                      ro/form-links          {todo/description TodoForm}\n                      ro/row-actions         [{:label \"Delete\"\n                                               :action (fn [report-instance {:todo/keys [id]}] (form/delete! report-instance :todo/id id))}]\n                      ro/run-on-mount?       true\n                      ro/route               \"todos\"})"]}