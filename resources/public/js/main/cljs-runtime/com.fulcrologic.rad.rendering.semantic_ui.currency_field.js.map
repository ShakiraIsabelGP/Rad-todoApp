{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/currency_field.cljc"],"mappings":";AAQA,AAAKA,AACH,AAACC,AAAa,AAAA,AAAA,AAAA,AAACC,AAC2C,AAAKC;AAAL,AACE,AAACC,AAA2BD;AAF1E,AAG4C,AAAKE;AAAL,AACE,AAACC,AAAa,AAAA,AAAA,AAACC,AAAYF;AAJzE,AAK4C,AAAKA;AAAL,AAAQA;;AAEpE,AAAKG,AAAa,AAAA,AAACC,AAAwBT","names":["com.fulcrologic.rad.rendering.semantic-ui.currency-field/ui-currency-input","com.fulcrologic.fulcro.components.factory","com.fulcrologic.fulcro.dom.inputs/StringBufferedInput","n","com.fulcrologic.rad.type_support.decimal.numeric__GT_currency_str","s","com.fulcrologic.rad.type-support.decimal/numeric","clojure.string/replace","com.fulcrologic.rad.rendering.semantic-ui.currency-field/render-field","com.fulcrologic.rad.rendering.semantic_ui.field.render_field_factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.currency-field\n (:require\n   [com.fulcrologic.fulcro.components :as comp]\n   [com.fulcrologic.fulcro.dom.inputs :as inputs]\n   [clojure.string :as str]\n   [com.fulcrologic.rad.rendering.semantic-ui.field :refer [render-field-factory]]\n   [com.fulcrologic.rad.type-support.decimal :as math]))\n\n(def ui-currency-input\n  (comp/factory (inputs/StringBufferedInput ::DecimalInput\n                                            {:model->string (fn [n]\n                                                              (math/numeric->currency-str n))\n                                             :string->model (fn [s]\n                                                              (math/numeric (str/replace s #\"[$,]\" \"\")))\n                                             :string-filter (fn [s] s)})))\n\n(def render-field (render-field-factory {} ui-currency-input))\n"]}