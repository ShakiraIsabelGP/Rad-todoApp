{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/decimal_field.cljc"],"mappings":";AAQA,AAAKA,AACH,AAACC,AAAa,AAAA,AAAA,AAAA,AAACC,AACiB,AAAKC;AAAL,AAAQ,AAACC,AAAkBD;AAD7C,AAEkB,AAAKE;AAAL,AAAQ,AAACC,AAAaD;AAFxC,AAGkB,AAAKA;AAAL,AAAQ,AAAA,AAAA,AAACE,AAAYF;;AAEvD,AAAKG,AAAa,AAAA,AAACC,AAAwBT","names":["com.fulcrologic.rad.rendering.semantic-ui.decimal-field/ui-decimal-input","com.fulcrologic.fulcro.components.factory","com.fulcrologic.fulcro.dom.inputs/StringBufferedInput","n","com.fulcrologic.rad.type-support.decimal/numeric->str","s","com.fulcrologic.rad.type-support.decimal/numeric","clojure.string/replace","com.fulcrologic.rad.rendering.semantic-ui.decimal-field/render-field","com.fulcrologic.rad.rendering.semantic_ui.field.render_field_factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.decimal-field\n  (:require\n    [com.fulcrologic.fulcro.components :as comp]\n    [com.fulcrologic.fulcro.dom.inputs :as inputs]\n    [clojure.string :as str]\n    [com.fulcrologic.rad.rendering.semantic-ui.field :refer [render-field-factory]]\n    [com.fulcrologic.rad.type-support.decimal :as math]))\n\n(def ui-decimal-input\n  (comp/factory (inputs/StringBufferedInput ::DecimalInput\n                  {:model->string (fn [n] (math/numeric->str n))\n                   :string->model (fn [s] (math/numeric s))\n                   :string-filter (fn [s] (str/replace s #\"[^\\d.]\" \"\"))})))\n\n(def render-field (render-field-factory {} ui-decimal-input))\n"]}