goog.provide('com.wsscode.pathom.connect.planner');
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Symbol("cljs.core","pos-int?","cljs.core/pos-int?",-2115888030,null),cljs.core.pos_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80902){
return cljs.core.set_QMARK_(G__80902);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.set_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80903){
return cljs.core.map_QMARK_(G__80903);
}),(function (G__80903){
return cljs.core.contains_QMARK_(G__80903,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__80903){
return ((cljs.core.map_QMARK_(G__80903)) && (cljs.core.contains_QMARK_(G__80903,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.core","shape-descriptor","com.wsscode.pathom.core/shape-descriptor",-1569907681),new cljs.core.Keyword("com.wsscode.pathom.core","shape-descriptor","com.wsscode.pathom.core/shape-descriptor",-1569907681));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","attr-deps-trail","com.wsscode.pathom.connect.planner/attr-deps-trail",1387730776),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),null], null), null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","id-counter","com.wsscode.pathom.connect.planner/id-counter",915440894),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.any_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-resolver","com.wsscode.pathom.connect.planner/node-resolver",533201608),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-or","com.wsscode.pathom.connect.planner/node-or",-1971835957),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-and","com.wsscode.pathom.connect.planner/node-and",547713646),"null",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-unknown","com.wsscode.pathom.connect.planner/node-unknown",-1008522467),"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-resolver","com.wsscode.pathom.connect.planner/node-resolver",533201608),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-or","com.wsscode.pathom.connect.planner/node-or",-1971835957),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-and","com.wsscode.pathom.connect.planner/node-and",547713646),null,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-unknown","com.wsscode.pathom.connect.planner/node-unknown",-1008522467),null], null), null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,"into","into",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80912){
return cljs.core.map_QMARK_(G__80912);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),(function (i__19036__auto__,v__19037__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__19037__auto__,(0));
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,"into","into",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80913){
return cljs.core.map_QMARK_(G__80913);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),(function (i__19036__auto__,v__19037__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__19037__auto__,(0));
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),new cljs.core.Symbol("cljs.core","nat-int?","cljs.core/nat-int?",-164364171,null),cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974),new cljs.core.Symbol("cljs.core","nat-int?","cljs.core/nat-int?",-164364171,null),cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),new cljs.core.Symbol("cljs.core","nat-int?","cljs.core/nat-int?",-164364171,null),cljs.core.nat_int_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80915){
return cljs.core.map_QMARK_(G__80915);
})], null),(function (G__80915){
return cljs.core.map_QMARK_(G__80915);
}),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null)])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","tuple","cljs.spec.alpha/tuple",-415901908,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null)),new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,"into","into",-150836029),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80916){
return cljs.core.map_QMARK_(G__80916);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.map_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),(function (i__19036__auto__,v__19037__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__19037__auto__,(0));
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","map-of","cljs.spec.alpha/map-of",153715093,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("s","keys","s/keys",-1586011188,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80918){
return cljs.core.map_QMARK_(G__80918);
}),(function (G__80918){
return cljs.core.contains_QMARK_(G__80918,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983));
})], null),(function (G__80918){
return ((cljs.core.map_QMARK_(G__80918)) && (cljs.core.contains_QMARK_(G__80918,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983))));
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)])),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80917){
return cljs.core.vector_QMARK_(G__80917);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402)], null)),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph-before-missing-chain","com.wsscode.pathom.connect.planner/graph-before-missing-chain",1272805834),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462),new cljs.core.Keyword("com.wsscode.pathom.connect","io-map","com.wsscode.pathom.connect/io-map",-1661450462));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next-trail","com.wsscode.pathom.connect.planner/run-next-trail",-1115570698),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80926){
return cljs.core.set_QMARK_(G__80926);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.set_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80929){
return cljs.core.set_QMARK_(G__80929);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.set_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","set?","cljs.core/set?",-1176684971,null))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warnings","com.wsscode.pathom.connect.planner/warnings",-782452265),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null))),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("s","keys","s/keys",-1586011188,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80933){
return cljs.core.map_QMARK_(G__80933);
}),(function (G__80933){
return cljs.core.contains_QMARK_(G__80933,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310));
})], null),(function (G__80933){
return ((cljs.core.map_QMARK_(G__80933)) && (cljs.core.contains_QMARK_(G__80933,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)))], null),null])),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__80931){
return cljs.core.coll_QMARK_(G__80931);
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310)], null)))], null),null));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","conflict-params","com.wsscode.pathom.connect.planner/conflict-params",1544070537),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205));
com.wsscode.pathom.connect.planner.pc_sym = new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581);
com.wsscode.pathom.connect.planner.pc_dyn_sym = new cljs.core.Keyword("com.wsscode.pathom.connect","dynamic-sym","com.wsscode.pathom.connect/dynamic-sym",1578282767);
com.wsscode.pathom.connect.planner.pc_output = new cljs.core.Keyword("com.wsscode.pathom.connect","output","com.wsscode.pathom.connect/output",552487303);
com.wsscode.pathom.connect.planner.pc_provides = new cljs.core.Keyword("com.wsscode.pathom.connect","provides","com.wsscode.pathom.connect/provides",865831498);
com.wsscode.pathom.connect.planner.pc_attr = new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075);
com.wsscode.pathom.connect.planner.pc_input = new cljs.core.Keyword("com.wsscode.pathom.connect","input","com.wsscode.pathom.connect/input",-1274439121);
com.wsscode.pathom.connect.planner.ast_node = new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957);






com.wsscode.pathom.connect.planner.base_graph = (function com$wsscode$pathom$connect$planner$base_graph(){
return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.PersistentHashSet.EMPTY], null);
});
com.wsscode.pathom.connect.planner.base_env = (function com$wsscode$pathom$connect$planner$base_env(){
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","id-counter","com.wsscode.pathom.connect.planner/id-counter",915440894),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),cljs.core.PersistentArrayMap.EMPTY], null);
});
/**
 * Return the next node ID in the system, its an incremental number
 */
com.wsscode.pathom.connect.planner.next_node_id = (function com$wsscode$pathom$connect$planner$next_node_id(p__80939){
var map__80941 = p__80939;
var map__80941__$1 = (((((!((map__80941 == null))))?(((((map__80941.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__80941.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__80941):map__80941);
var id_counter = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__80941__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","id-counter","com.wsscode.pathom.connect.planner/id-counter",915440894));
return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(id_counter,cljs.core.inc);
});
/**
 * Return all node-ids from the graph.
 */
com.wsscode.pathom.connect.planner.all_node_ids = (function com$wsscode$pathom$connect$planner$all_node_ids(graph){
return cljs.core.keys(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979).cljs$core$IFn$_invoke$arity$1(graph));
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","get-node","com.wsscode.pathom.connect.planner/get-node",1869353260,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))),new cljs.core.Keyword(null,"fn","fn",-1175266204),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.Symbol(null,"valid-multi-arity-ret?","valid-multi-arity-ret?",-2088255426,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","case","cljs.core/case",-1674122212,null),cljs.core.list(new cljs.core.Symbol("cljs.core","->","cljs.core/->",1488366311,null),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Symbol("cljs.core","key","cljs.core/key",799303703,null)),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null)))))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80965){
return cljs.core.map_QMARK_(G__80965);
}),(function (G__80965){
return cljs.core.contains_QMARK_(G__80965,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__80965){
return ((cljs.core.map_QMARK_(G__80965)) && (cljs.core.contains_QMARK_(G__80965,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"k","k",-2146297393)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80979){
return cljs.core.map_QMARK_(G__80979);
}),(function (G__80979){
return cljs.core.contains_QMARK_(G__80979,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__80979){
return ((cljs.core.map_QMARK_(G__80979)) && (cljs.core.contains_QMARK_(G__80979,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),cljs.core.keyword_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)], null))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.Symbol(null,"valid-multi-arity-ret?","valid-multi-arity-ret?",-2088255426,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","case","cljs.core/case",-1674122212,null),cljs.core.list(new cljs.core.Symbol("cljs.core","->","cljs.core/->",1488366311,null),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Symbol("cljs.core","key","cljs.core/key",799303703,null)),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null))))),(function com$wsscode$pathom$connect$planner$valid_multi_arity_ret_QMARK_(p1__80948){
var G__80987 = cljs.core.key(new cljs.core.Keyword(null,"args","args",1315556576).cljs$core$IFn$_invoke$arity$1(p1__80948));
var G__80987__$1 = (((G__80987 instanceof cljs.core.Keyword))?G__80987.fqn:null);
switch (G__80987__$1) {
case "arity-2":
return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null),new cljs.core.Keyword(null,"ret","ret",-468222814).cljs$core$IFn$_invoke$arity$1(p1__80948));

break;
case "arity-3":
return cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(cljs.core.any_QMARK_,new cljs.core.Keyword(null,"ret","ret",-468222814).cljs$core$IFn$_invoke$arity$1(p1__80948));

break;
default:
throw (new Error(["No matching clause: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__80987__$1)].join('')));

}
}),null,null),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.Symbol(null,"valid-multi-arity-ret?","valid-multi-arity-ret?",-2088255426,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","case","cljs.core/case",-1674122212,null),cljs.core.list(new cljs.core.Symbol("cljs.core","->","cljs.core/->",1488366311,null),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Symbol("cljs.core","key","cljs.core/key",799303703,null)),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null))),new cljs.core.Keyword(null,"arity-3","arity-3",1661577885),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.list(new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol(null,"p1__80948","p1__80948",441120977,null))))),null));


com.wsscode.pathom.connect.planner.get_node = (function com$wsscode$pathom$connect$planner$get_node(var_args){
var G__80989 = arguments.length;
switch (G__80989) {
case 2:
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2 = (function (graph,node_id){
var map__80990 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80991){
return cljs.core.map_QMARK_(G__80991);
}),(function (G__80991){
return cljs.core.contains_QMARK_(G__80991,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__80991){
return ((cljs.core.map_QMARK_(G__80991)) && (cljs.core.contains_QMARK_(G__80991,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),null,null,null);
var map__80990__$1 = (((((!((map__80990 == null))))?(((((map__80990.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__80990.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__80990):map__80990);
var argspec80949 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__80990__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec80950 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__80990__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec80949)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec80949,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f80952 = (function (graph__$1,node_id__$1){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id__$1], null));
});
var ret80951 = f80952(graph,node_id);
if(cljs.core.truth_(retspec80950)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec80950,ret80951);
} else {
}

return ret80951;
}));

(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3 = (function (graph,node_id,k){
var map__80998 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"k","k",-2146297393)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__80999){
return cljs.core.map_QMARK_(G__80999);
}),(function (G__80999){
return cljs.core.contains_QMARK_(G__80999,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__80999){
return ((cljs.core.map_QMARK_(G__80999)) && (cljs.core.contains_QMARK_(G__80999,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),cljs.core.keyword_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"k","k",-2146297393),new cljs.core.Symbol("cljs.core","keyword?","cljs.core/keyword?",713156450,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol("cljs.core","any?","cljs.core/any?",-2068111842,null),null,null,null);
var map__80998__$1 = (((((!((map__80998 == null))))?(((((map__80998.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__80998.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__80998):map__80998);
var retspec80954 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__80998__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec80953 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__80998__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec80953)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec80953,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id,k], null));
} else {
}

var f80956 = (function (graph__$1,node_id__$1,k__$1){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id__$1,k__$1], null));
});
var ret80955 = f80956(graph,node_id,k);
if(cljs.core.truth_(retspec80954)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:182 get-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec80954,ret80955);
} else {
}

return ret80955;
}));

(com.wsscode.pathom.connect.planner.get_node.cljs$lang$maxFixedArity = 3);

/**
 * Set property k about node-id. Only assoc when node exists, otherwise its a noop.
 */
com.wsscode.pathom.connect.planner.assoc_node = (function com$wsscode$pathom$connect$planner$assoc_node(graph,node_id,k,v){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.assoc_in(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),v);
} else {
return graph;
}
});
/**
 * Update a given node in a graph, like Clojure native update.
 */
com.wsscode.pathom.connect.planner.update_node = (function com$wsscode$pathom$connect$planner$update_node(var_args){
var G__81031 = arguments.length;
switch (G__81031) {
case 4:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
case 6:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));

break;
case 7:
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));

break;
default:
var args_arr__4757__auto__ = [];
var len__4736__auto___81632 = arguments.length;
var i__4737__auto___81633 = (0);
while(true){
if((i__4737__auto___81633 < len__4736__auto___81632)){
args_arr__4757__auto__.push((arguments[i__4737__auto___81633]));

var G__81634 = (i__4737__auto___81633 + (1));
i__4737__auto___81633 = G__81634;
continue;
} else {
}
break;
}

var argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((7)),(0),null));
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),argseq__4758__auto__);

}
});

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$4 = (function (graph,node_id,k,f){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$5 = (function (graph,node_id,k,f,v){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$6 = (function (graph,node_id,k,f,v,v2){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v,v2);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$7 = (function (graph,node_id,k,f,v,v2,v3){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v,v2,v3);
} else {
return graph;
}
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$variadic = (function (graph,node_id,k,f,v,v2,v3,args){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id))){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in,graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,k], null),f,v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v2,v3,args], 0));
} else {
return graph;
}
}));

/** @this {Function} */
(com.wsscode.pathom.connect.planner.update_node.cljs$lang$applyTo = (function (seq81023){
var G__81024 = cljs.core.first(seq81023);
var seq81023__$1 = cljs.core.next(seq81023);
var G__81025 = cljs.core.first(seq81023__$1);
var seq81023__$2 = cljs.core.next(seq81023__$1);
var G__81026 = cljs.core.first(seq81023__$2);
var seq81023__$3 = cljs.core.next(seq81023__$2);
var G__81027 = cljs.core.first(seq81023__$3);
var seq81023__$4 = cljs.core.next(seq81023__$3);
var G__81028 = cljs.core.first(seq81023__$4);
var seq81023__$5 = cljs.core.next(seq81023__$4);
var G__81029 = cljs.core.first(seq81023__$5);
var seq81023__$6 = cljs.core.next(seq81023__$5);
var G__81030 = cljs.core.first(seq81023__$6);
var seq81023__$7 = cljs.core.next(seq81023__$6);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__81024,G__81025,G__81026,G__81027,G__81028,G__81029,G__81030,seq81023__$7);
}));

(com.wsscode.pathom.connect.planner.update_node.cljs$lang$maxFixedArity = (7));

cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","add-node-log","com.wsscode.pathom.connect.planner/add-node-log",-1640842258,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"event","event",301435442)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81050){
return cljs.core.map_QMARK_(G__81050);
}),(function (G__81050){
return cljs.core.contains_QMARK_(G__81050,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983));
})], null),(function (G__81050){
return ((cljs.core.map_QMARK_(G__81050)) && (cljs.core.contains_QMARK_(G__81050,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)))], null),null]))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * Add a new log entry to the node, this is similar to how tracing works, but these are
 *   internal logs about events for that specific node.
 * @type {function(*, *, !cljs.core.IMap): *}
 */
com.wsscode.pathom.connect.planner.add_node_log = (function com$wsscode$pathom$connect$planner$add_node_log(graph,node_id,event){
var map__81051 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"event","event",301435442)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81052){
return cljs.core.map_QMARK_(G__81052);
}),(function (G__81052){
return cljs.core.contains_QMARK_(G__81052,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983));
})], null),(function (G__81052){
return ((cljs.core.map_QMARK_(G__81052)) && (cljs.core.contains_QMARK_(G__81052,new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)))], null),null]))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"event","event",301435442),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__81051__$1 = (((((!((map__81051 == null))))?(((((map__81051.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81051.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81051):map__81051);
var argspec81042 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81051__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81043 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81051__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81042)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:223 add-node-log's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81042,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id,event], null));
} else {
}

var f81045 = (function (graph__$1,node_id__$1,event__$1){
return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$4(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575),(function (p1__81041_SHARP_){
return com.wsscode.pathom.misc.vconj(p1__81041_SHARP_,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(event__$1,new cljs.core.Keyword("com.wsscode.pathom.trace","timestamp","com.wsscode.pathom.trace/timestamp",1867371402),com.wsscode.pathom.trace.now()));
}));
});
var ret81044 = f81045(graph,node_id,event);
if(cljs.core.truth_(retspec81043)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:223 add-node-log's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81043,ret81044);
} else {
}

return ret81044;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","integrate-node-log","com.wsscode.pathom.connect.planner/integrate-node-log",686484175,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81066){
return cljs.core.map_QMARK_(G__81066);
})], null),(function (G__81066){
return cljs.core.map_QMARK_(G__81066);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null,null));


/**
 * Pulls the events from ::node-trace to the node itself, this will use the name from
 *   ::pt/event on each trace event and make it part of the node itself.
 * 
 *   Note that in case of repeated events, only the last one will be kept.
 * @type {function(!cljs.core.IMap): *}
 */
com.wsscode.pathom.connect.planner.integrate_node_log = (function com$wsscode$pathom$connect$planner$integrate_node_log(p__81072){
var map__81073 = p__81072;
var map__81073__$1 = (((((!((map__81073 == null))))?(((((map__81073.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81073.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81073):map__81073);
var node = map__81073__$1;
var node_trace = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81073__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575));
var map__81075 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81076){
return cljs.core.map_QMARK_(G__81076);
})], null),(function (G__81076){
return cljs.core.map_QMARK_(G__81076);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null,null,null);
var map__81075__$1 = (((((!((map__81075 == null))))?(((((map__81075.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81075.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81075):map__81075);
var retspec81060 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81075__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81059 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81075__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81059)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:231 integrate-node-log's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81059,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f81062 = (function (p__81084){
var map__81085 = p__81084;
var map__81085__$1 = (((((!((map__81085 == null))))?(((((map__81085.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81085.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81085):map__81085);
var node__$1 = map__81085__$1;
var node_trace__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81085__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-trace","com.wsscode.pathom.connect.planner/node-trace",-794082575));
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(node__$1,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.trace","event","com.wsscode.pathom.trace/event",1287398983),cljs.core.identity)),node_trace__$1);
});
var ret81061 = f81062(node);
if(cljs.core.truth_(retspec81060)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:231 integrate-node-log's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81060,ret81061);
} else {
}

return ret81061;
});
com.wsscode.pathom.connect.planner.get_root_node = (function com$wsscode$pathom$connect$planner$get_root_node(p__81089){
var map__81091 = p__81089;
var map__81091__$1 = (((((!((map__81091 == null))))?(((((map__81091.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81091.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81091):map__81091);
var graph = map__81091__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81091__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,root);
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","set-root-node","com.wsscode.pathom.connect.planner/set-root-node",845300352,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81104){
return cljs.core.map_QMARK_(G__81104);
}),(function (G__81104){
return cljs.core.contains_QMARK_(G__81104,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__81104){
return ((cljs.core.map_QMARK_(G__81104)) && (cljs.core.contains_QMARK_(G__81104,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81105){
return cljs.core.map_QMARK_(G__81105);
}),(function (G__81105){
return cljs.core.contains_QMARK_(G__81105,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__81105){
return ((cljs.core.map_QMARK_(G__81105)) && (cljs.core.contains_QMARK_(G__81105,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),null,null,null));


/**
 * @type {function(!cljs.core.IMap, *): !cljs.core.IMap}
 */
com.wsscode.pathom.connect.planner.set_root_node = (function com$wsscode$pathom$connect$planner$set_root_node(graph,node_id){
var map__81106 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81107){
return cljs.core.map_QMARK_(G__81107);
}),(function (G__81107){
return cljs.core.contains_QMARK_(G__81107,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__81107){
return ((cljs.core.map_QMARK_(G__81107)) && (cljs.core.contains_QMARK_(G__81107,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81108){
return cljs.core.map_QMARK_(G__81108);
}),(function (G__81108){
return cljs.core.contains_QMARK_(G__81108,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__81108){
return ((cljs.core.map_QMARK_(G__81108)) && (cljs.core.contains_QMARK_(G__81108,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),null,null,null);
var map__81106__$1 = (((((!((map__81106 == null))))?(((((map__81106.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81106.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81106):map__81106);
var argspec81093 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81106__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81094 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81106__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81093)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:247 set-root-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81093,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f81096 = (function (graph__$1,node_id__$1){
if(cljs.core.truth_(node_id__$1)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(graph__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243),node_id__$1);
} else {
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
}
});
var ret81095 = f81096(graph,node_id);
if(cljs.core.truth_(retspec81094)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:247 set-root-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81094,ret81095);
} else {
}

return ret81095;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-branches","com.wsscode.pathom.connect.planner/node-branches",1620148342,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword(null,"or","or",235744169)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),null),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),null,null,null));


/**
 * @type {function(*): *}
 */
com.wsscode.pathom.connect.planner.node_branches = (function com$wsscode$pathom$connect$planner$node_branches(node){
var map__81116 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword(null,"or","or",235744169)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)], null),null),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"and","and",-971899817),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664))),null,null,null);
var map__81116__$1 = (((((!((map__81116 == null))))?(((((map__81116.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81116.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81116):map__81116);
var retspec81113 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81116__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81112 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81116__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81112)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:255 node-branches's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81112,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f81115 = (function (node__$1){
var or__4126__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node__$1);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664).cljs$core$IFn$_invoke$arity$1(node__$1);
}
});
var ret81114 = f81115(node);
if(cljs.core.truth_(retspec81113)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:255 node-branches's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81113,ret81114);
} else {
}

return ret81114;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","get-attribute-node","com.wsscode.pathom.connect.planner/get-attribute-node",-454056938,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null));


/**
 * Find the node for attribute in attribute index.
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.get_attribute_node = (function com$wsscode$pathom$connect$planner$get_attribute_node(graph,attribute){
var map__81128 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null),null,null),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null);
var map__81128__$1 = (((((!((map__81128 == null))))?(((((map__81128.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81128.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81128):map__81128);
var retspec81125 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81128__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81124 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81128__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81124)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:262 get-attribute-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81124,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,attribute], null));
} else {
}

var f81127 = (function (graph__$1,attribute__$1){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),attribute__$1], null));
});
var ret81126 = f81127(graph,attribute);
if(cljs.core.truth_(retspec81125)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:262 get-attribute-node's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81125,ret81126);
} else {
}

return ret81126;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","branch-node?","com.wsscode.pathom.connect.planner/branch-node?",232358814,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * @type {function(*): !boolean}
 */
com.wsscode.pathom.connect.planner.branch_node_QMARK_ = (function com$wsscode$pathom$connect$planner$branch_node_QMARK_(node){
var map__81134 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__81134__$1 = (((((!((map__81134 == null))))?(((((map__81134.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81134.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81134):map__81134);
var retspec81131 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81134__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81130 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81134__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81130)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:268 branch-node?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81130,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f81133 = (function (node__$1){
return cljs.core.boolean$(com.wsscode.pathom.connect.planner.node_branches(node__$1));
});
var ret81132 = f81133(node);
if(cljs.core.truth_(retspec81131)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:268 branch-node?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81131,ret81132);
} else {
}

return ret81132;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-kind","com.wsscode.pathom.connect.planner/node-kind",1055922703,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null,null));


/**
 * Return a keyword describing the type of the node.
 * @type {function(*): *}
 */
com.wsscode.pathom.connect.planner.node_kind = (function com$wsscode$pathom$connect$planner$node_kind(node){
var map__81150 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-type","com.wsscode.pathom.connect.planner/node-type",224423208),null,null,null);
var map__81150__$1 = (((((!((map__81150 == null))))?(((((map__81150.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81150.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81150):map__81150);
var argspec81144 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81150__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81145 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81150__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81144)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:273 node-kind's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81144,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f81147 = (function (node__$1){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node__$1))){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-resolver","com.wsscode.pathom.connect.planner/node-resolver",533201608);
} else {
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node__$1))){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-and","com.wsscode.pathom.connect.planner/node-and",547713646);
} else {
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664).cljs$core$IFn$_invoke$arity$1(node__$1))){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-or","com.wsscode.pathom.connect.planner/node-or",-1971835957);
} else {
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-unknown","com.wsscode.pathom.connect.planner/node-unknown",-1008522467);

}
}
}
});
var ret81146 = f81147(node);
if(cljs.core.truth_(retspec81145)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:273 node-kind's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81145,ret81146);
} else {
}

return ret81146;
});
/**
 * Return a string representation for the node, for resolver nodes this is the
 *   symbol, branch nodes get AND / OR respectively.
 */
com.wsscode.pathom.connect.planner.node__GT_label = (function com$wsscode$pathom$connect$planner$node__GT_label(node){
return cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4126__auto__ = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
var or__4126__auto____$1 = (cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node))?"AND":null);
if(cljs.core.truth_(or__4126__auto____$1)){
return or__4126__auto____$1;
} else {
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664).cljs$core$IFn$_invoke$arity$1(node))){
return "OR";
} else {
return null;
}
}
}
})());
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","compute-branch-node-chain-depth","com.wsscode.pathom.connect.planner/compute-branch-node-chain-depth",-940623367,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.compute_branch_node_chain_depth = (function com$wsscode$pathom$connect$planner$compute_branch_node_chain_depth(graph,node_id){
var map__81162 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__81162__$1 = (((((!((map__81162 == null))))?(((((map__81162.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81162.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81162):map__81162);
var argspec81158 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81162__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81159 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81162__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81158)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:300 compute-branch-node-chain-depth's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81158,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f81161 = (function (graph__$1,node_id__$1){
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974)))){
return graph__$1;
} else {
var branches = com.wsscode.pathom.connect.planner.node_branches(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1));
if(cljs.core.seq(branches)){
var graph_SINGLEQUOTE_ = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.planner.compute_node_chain_depth,graph__$1,branches);
var branch_depth = (cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__81157_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,p1__81157_SHARP_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914));
}),branches)) + (1));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974),branch_depth);
} else {
return com.wsscode.pathom.connect.planner.assoc_node(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974),(0));
}
}
});
var ret81160 = f81161(graph,node_id);
if(cljs.core.truth_(retspec81159)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:300 compute-branch-node-chain-depth's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81159,ret81160);
} else {
}

return ret81160;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","compute-node-chain-depth","com.wsscode.pathom.connect.planner/compute-node-chain-depth",472524816,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.compute_node_chain_depth = (function com$wsscode$pathom$connect$planner$compute_node_chain_depth(graph,node_id){
var map__81176 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__81176__$1 = (((((!((map__81176 == null))))?(((((map__81176.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81176.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81176):map__81176);
var retspec81170 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81176__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81169 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81176__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81169)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:312 compute-node-chain-depth's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81169,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f81172 = (function (graph__$1,node_id__$1){
var map__81180 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1);
var map__81180__$1 = (((((!((map__81180 == null))))?(((((map__81180.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81180.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81180):map__81180);
var node = map__81180__$1;
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81180__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var node_chain_depth = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81180__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914));
var branches = com.wsscode.pathom.connect.planner.node_branches(node);
if(cljs.core.truth_(node_chain_depth)){
return graph__$1;
} else {
if(cljs.core.truth_(branches)){
var graph_SINGLEQUOTE_ = (function (){var G__81184 = com.wsscode.pathom.connect.planner.compute_branch_node_chain_depth(graph__$1,node_id__$1);
if(cljs.core.truth_(run_next)){
return (com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2(G__81184,run_next) : com.wsscode.pathom.connect.planner.compute_node_chain_depth.call(null,G__81184,run_next));
} else {
return G__81184;
}
})();
var branch_depth = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974));
var next_depth = (cljs.core.truth_(run_next)?(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,run_next,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914)) + (1)):(0));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),(branch_depth + next_depth));
} else {
if(cljs.core.truth_(run_next)){
var graph_SINGLEQUOTE_ = (com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_node_chain_depth.cljs$core$IFn$_invoke$arity$2(graph__$1,run_next) : com.wsscode.pathom.connect.planner.compute_node_chain_depth.call(null,graph__$1,run_next));
var next_depth = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph_SINGLEQUOTE_,run_next,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),(next_depth + (1)));
} else {
return com.wsscode.pathom.connect.planner.assoc_node(graph__$1,node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-chain-depth","com.wsscode.pathom.connect.planner/node-chain-depth",44154914),(0));

}
}
}
});
var ret81171 = f81172(graph,node_id);
if(cljs.core.truth_(retspec81170)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:312 compute-node-chain-depth's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81170,ret81171);
} else {
}

return ret81171;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","previous-node-depth","com.wsscode.pathom.connect.planner/previous-node-depth",-1702738234,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null,null));


/**
 * Get previous node depth, normally it uses the ::node-depth of previous node. There
 *   is a special case, when the previous node is a branch node and the current node is
 *   the run-next of the previous, in this case the previous depth should return the node
 *   chain depth instead, so the depth of the run-next goes after the branch dependencies.
 * @type {function(*, *, *): *}
 */
com.wsscode.pathom.connect.planner.previous_node_depth = (function com$wsscode$pathom$connect$planner$previous_node_depth(graph,current_node_id,previous_node_id){
var map__81195 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"current-node-id","current-node-id",2065479273),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"previous-node-id","previous-node-id",-294057087),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),null,null,null);
var map__81195__$1 = (((((!((map__81195 == null))))?(((((map__81195.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81195.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81195):map__81195);
var retspec81191 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81195__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81190 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81195__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81190)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:339 previous-node-depth's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81190,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,current_node_id,previous_node_id], null));
} else {
}

var f81193 = (function (graph__$1,current_node_id__$1,previous_node_id__$1){
var previous_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,previous_node_id__$1);
if(((com.wsscode.pathom.connect.planner.branch_node_QMARK_(previous_node)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(current_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(previous_node))))){
return (com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,previous_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089)) + com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,previous_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-branch-depth","com.wsscode.pathom.connect.planner/node-branch-depth",-358012974)));
} else {
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph__$1,previous_node_id__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089));
}
});
var ret81192 = f81193(graph,current_node_id,previous_node_id);
if(cljs.core.truth_(retspec81191)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:339 previous-node-depth's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81191,ret81192);
} else {
}

return ret81192;
});
/**
 * Calculate depth of node-id, this returns a graph in which that node has
 *   the key ::node-depth associated in the node. The depth is calculated by
 *   following the ::after-nodes chain, in the process all the parent node depths
 *   are also calculated and set, this makes it efficient to scan the list calculating
 *   the depths, given each node will be visited at max once.
 */
com.wsscode.pathom.connect.planner.compute_node_depth = (function com$wsscode$pathom$connect$planner$compute_node_depth(graph,node_id){
var map__81200 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__81200__$1 = (((((!((map__81200 == null))))?(((((map__81200.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81200.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81200):map__81200);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81200__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
var node_depth = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81200__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089));
if(cljs.core.truth_(node_depth)){
return graph;
} else {
if(cljs.core.truth_(after_nodes)){
var graph_SINGLEQUOTE_ = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__81197_SHARP_,p2__81198_SHARP_){
var G__81202 = com.wsscode.pathom.connect.planner.compute_branch_node_chain_depth(p1__81197_SHARP_,p2__81198_SHARP_);
var G__81203 = p2__81198_SHARP_;
return (com.wsscode.pathom.connect.planner.compute_node_depth.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_node_depth.cljs$core$IFn$_invoke$arity$2(G__81202,G__81203) : com.wsscode.pathom.connect.planner.compute_node_depth.call(null,G__81202,G__81203));
}),graph,after_nodes);
var depth = (cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__81199_SHARP_){
return com.wsscode.pathom.connect.planner.previous_node_depth(graph_SINGLEQUOTE_,node_id,p1__81199_SHARP_);
}),after_nodes)) + (1));
return com.wsscode.pathom.connect.planner.assoc_node(graph_SINGLEQUOTE_,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),depth);
} else {
return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089),(0));

}
}
});
/**
 * Compute the depth for node-id and return it.
 */
com.wsscode.pathom.connect.planner.node_depth = (function com$wsscode$pathom$connect$planner$node_depth(graph,node_id){
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-depth","com.wsscode.pathom.connect.planner/node-depth",1755246089).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.compute_node_depth(graph,node_id),node_id));
});
/**
 * Return graph with node-depth calculated for all nodes.
 */
com.wsscode.pathom.connect.planner.compute_all_node_depths = (function com$wsscode$pathom$connect$planner$compute_all_node_depths(graph){
var node_ids = com.wsscode.pathom.connect.planner.all_node_ids(graph);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.planner.compute_node_depth,graph,node_ids);
});
com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_ = (function com$wsscode$pathom$connect$planner$dynamic_resolver_QMARK_(p__81206,sym){
var map__81207 = p__81206;
var map__81207__$1 = (((((!((map__81207 == null))))?(((((map__81207.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81207.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81207):map__81207);
var index_resolvers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81207__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256));
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(index_resolvers,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,new cljs.core.Keyword("com.wsscode.pathom.connect","dynamic-resolver?","com.wsscode.pathom.connect/dynamic-resolver?",-2098759706)], null));
});
/**
 * Add attribute to unreachable list
 */
com.wsscode.pathom.connect.planner.add_unreachable_attr = (function com$wsscode$pathom$connect$planner$add_unreachable_attr(graph,attr){
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.conj,attr);
});
/**
 * Check if node and graph point to same run-next.
 */
com.wsscode.pathom.connect.planner.optimize_merge_QMARK_ = (function com$wsscode$pathom$connect$planner$optimize_merge_QMARK_(graph,p__81212){
var map__81213 = p__81212;
var map__81213__$1 = (((((!((map__81213 == null))))?(((((map__81213.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81213.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81213):map__81213);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81213__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var root_next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)], null));
var node_next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)], null));
var and__4115__auto__ = root_next;
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root_next,node_next);
} else {
return and__4115__auto__;
}
});
/**
 * Get resolver provides from environment source symbol.
 */
com.wsscode.pathom.connect.planner.resolver_provides = (function com$wsscode$pathom$connect$planner$resolver_provides(p__81218){
var map__81219 = p__81218;
var map__81219__$1 = (((((!((map__81219 == null))))?(((((map__81219.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81219.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81219):map__81219);
var index_resolvers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81219__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256));
var source_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81219__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302));
return com.wsscode.pathom.connect.indexes.resolver_provides(cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_resolvers,source_sym));
});
/**
 * Given some branch node, tries to find a node with a dynamic resolver that's the
 *   same sym as the node in node-id.
 */
com.wsscode.pathom.connect.planner.find_branch_node_to_merge = (function com$wsscode$pathom$connect$planner$find_branch_node_to_merge(p__81223,p__81224,p__81225){
var map__81227 = p__81223;
var map__81227__$1 = (((((!((map__81227 == null))))?(((((map__81227.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81227.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81227):map__81227);
var graph = map__81227__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81227__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81228 = p__81224;
var map__81228__$1 = (((((!((map__81228 == null))))?(((((map__81228.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81228.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81228):map__81228);
var branch_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81228__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895));
var map__81229 = p__81225;
var map__81229__$1 = (((((!((map__81229 == null))))?(((((map__81229.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81229.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81229):map__81229);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81229__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var node = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null));
var node_sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(node_sym)){
return cljs.core.some((function (p1__81221_SHARP_){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(node_sym,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),p1__81221_SHARP_,com.wsscode.pathom.connect.planner.pc_sym], null)))){
return p1__81221_SHARP_;
} else {
return null;
}
}),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root,branch_type], null)));
} else {
return null;
}
});
com.wsscode.pathom.connect.planner.add_after_node = (function com$wsscode$pathom$connect$planner$add_after_node(graph,node_id,after_node_id){
if(cljs.core.truth_(after_node_id)){
} else {
throw (new Error(["Assert failed: ","Tried to add after node with nil value","\n","after-node-id"].join('')));
}

return com.wsscode.pathom.connect.planner.update_node.cljs$core$IFn$_invoke$arity$5(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),com.wsscode.pathom.misc.sconj,after_node_id);
});
com.wsscode.pathom.connect.planner.set_after_node = (function com$wsscode$pathom$connect$planner$set_after_node(graph,node_id,after_node_id){
if(cljs.core.truth_(after_node_id)){
} else {
throw (new Error(["Assert failed: ","Tried to set after node with nil value","\n","after-node-id"].join('')));
}

return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),cljs.core.PersistentHashSet.createAsIfByAssoc([after_node_id]));
});
com.wsscode.pathom.connect.planner.remove_after_node = (function com$wsscode$pathom$connect$planner$remove_after_node(graph,node_id,after_node_id){
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var after_nodes_SINGLEQUOTE_ = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057).cljs$core$IFn$_invoke$arity$2(node,cljs.core.PersistentHashSet.EMPTY),after_node_id);
if(cljs.core.seq(after_nodes_SINGLEQUOTE_)){
return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057),after_nodes_SINGLEQUOTE_);
} else {
if(cljs.core.truth_(node)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
} else {
return graph;
}
}
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","same-resolver?","com.wsscode.pathom.connect.planner/same-resolver?",1991219581,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node1","node1",-1781864240),new cljs.core.Keyword(null,"node2","node2",-2031724393)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null),cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * Check if node1 and node2 have the same resolver name.
 * @type {function(?cljs.core.IMap, ?cljs.core.IMap): !boolean}
 */
com.wsscode.pathom.connect.planner.same_resolver_QMARK_ = (function com$wsscode$pathom$connect$planner$same_resolver_QMARK_(node1,node2){
var map__81249 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node1","node1",-1781864240),new cljs.core.Keyword(null,"node2","node2",-2031724393)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null),cljs.spec.alpha.nilable_impl(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),cljs.core.map_QMARK_,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node1","node1",-1781864240),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null)),new cljs.core.Keyword(null,"node2","node2",-2031724393),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__81249__$1 = (((((!((map__81249 == null))))?(((((map__81249.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81249.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81249):map__81249);
var argspec81245 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81249__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81246 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81249__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81245)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:443 same-resolver?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81245,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node1,node2], null));
} else {
}

var f81248 = (function (node1__$1,node2__$1){
return cljs.core.boolean$((function (){var and__4115__auto__ = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node1__$1);
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node1__$1),com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node2__$1));
} else {
return and__4115__auto__;
}
})());
});
var ret81247 = f81248(node1,node2);
if(cljs.core.truth_(retspec81246)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:443 same-resolver?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81246,ret81247);
} else {
}

return ret81247;
});
/**
 * Update the node-id run-next value, if run-next is nil the property
 *   will be removed from the map.
 */
com.wsscode.pathom.connect.planner.set_node_run_next_STAR_ = (function com$wsscode$pathom$connect$planner$set_node_run_next_STAR_(graph,node_id,run_next){
if(cljs.core.truth_(run_next)){
return com.wsscode.pathom.connect.planner.assoc_node(graph,node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),run_next);
} else {
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
}
});
/**
 * Set the node run next value and add the after-node counter part. Noop if target
 *   and run next are the same node.
 */
com.wsscode.pathom.connect.planner.set_node_run_next = (function com$wsscode$pathom$connect$planner$set_node_run_next(graph,target_node_id,run_next){
var map__81262 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
var map__81262__$1 = (((((!((map__81262 == null))))?(((((map__81262.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81262.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81262):map__81262);
var target_run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81262__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var graph__$1 = (cljs.core.truth_(target_run_next)?com.wsscode.pathom.connect.planner.remove_after_node(graph,target_run_next,target_node_id):graph);
if(cljs.core.not(run_next)){
return com.wsscode.pathom.connect.planner.set_node_run_next_STAR_(graph__$1,target_node_id,run_next);
} else {
if(cljs.core.truth_((function (){var and__4115__auto__ = run_next;
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,run_next);
} else {
return and__4115__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.add_after_node(com.wsscode.pathom.connect.planner.set_node_run_next_STAR_(graph__$1,target_node_id,run_next),run_next,target_node_id);
} else {
return graph__$1;

}
}
});
/**
 * Like set-node-run-next, but also checks if the target and next node are the same
 *   resolver, if so, this fn will collapse those nodes.
 */
com.wsscode.pathom.connect.planner.collapse_set_node_run_next = (function com$wsscode$pathom$connect$planner$collapse_set_node_run_next(graph,target_node_id,run_next){
var target_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
var next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,run_next);
if(com.wsscode.pathom.connect.planner.same_resolver_QMARK_(target_node,next_node)){
return (com.wsscode.pathom.connect.planner.collapse_nodes_chain.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.collapse_nodes_chain.cljs$core$IFn$_invoke$arity$3(graph,target_node_id,run_next) : com.wsscode.pathom.connect.planner.collapse_nodes_chain.call(null,graph,target_node_id,run_next));
} else {
return com.wsscode.pathom.connect.planner.set_node_run_next(graph,target_node_id,run_next);
}
});
/**
 * When node-id is a branch node, remove all after-nodes associated from its children.
 */
com.wsscode.pathom.connect.planner.remove_branch_node_after_nodes = (function com$wsscode$pathom$connect$planner$remove_branch_node_after_nodes(graph,node_id){
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var temp__5733__auto__ = com.wsscode.pathom.connect.planner.node_branches(node);
if(cljs.core.truth_(temp__5733__auto__)){
var branches = temp__5733__auto__;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (g,n_id){
return com.wsscode.pathom.connect.planner.remove_after_node(g,n_id,node_id);
}),graph,branches);
} else {
return graph;
}
});
/**
 * Remove a node from the graph. In case of resolver nodes it also removes them
 *   from the ::index-syms and after node references.
 */
com.wsscode.pathom.connect.planner.remove_node = (function com$wsscode$pathom$connect$planner$remove_node(graph,node_id){
var map__81272 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__81272__$1 = (((((!((map__81272 == null))))?(((((map__81272.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81272.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81272):map__81272);
var node = map__81272__$1;
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81272__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81272__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
if((cljs.core.truth_(after_nodes)?cljs.core.every_QMARK_((function (p1__81270_SHARP_){
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,p1__81270_SHARP_)));
}),after_nodes):true)){
} else {
throw (new Error(["Assert failed: ","Tried to remove node that still contains references pointing to it. Move\n      the run-next references from the pointer nodes before removing it.","\n","(if after-nodes (every? (fn* [p1__81270#] (not= node-id (-> (get-node graph p1__81270#) :com.wsscode.pathom.connect.planner/run-next))) after-nodes) true)"].join('')));
}

return cljs.core.update.cljs$core$IFn$_invoke$arity$4(com.wsscode.pathom.connect.planner.remove_after_node(com.wsscode.pathom.connect.planner.remove_branch_node_after_nodes((function (){var G__81277 = graph;
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__81277,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node)], null),cljs.core.disj,node_id);
} else {
return G__81277;
}
})(),node_id),run_next,node_id),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),cljs.core.dissoc,node_id);
});
/**
 * Merge requires from node into target-node-id.
 */
com.wsscode.pathom.connect.planner.merge_node_requires = (function com$wsscode$pathom$connect$planner$merge_node_requires(graph,target_node_id,p__81278){
var map__81279 = p__81278;
var map__81279__$1 = (((((!((map__81279 == null))))?(((((map__81279.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81279.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81279):map__81279);
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81279__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
if(cljs.core.truth_(requires)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289)], null),com.wsscode.pathom.connect.indexes.merge_io,requires);
} else {
return graph;
}
});
/**
 * Merge input from node into target-node-id.
 */
com.wsscode.pathom.connect.planner.merge_node_input = (function com$wsscode$pathom$connect$planner$merge_node_input(graph,target_node_id,p__81281){
var map__81282 = p__81281;
var map__81282__$1 = (((((!((map__81282 == null))))?(((((map__81282.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81282.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81282):map__81282);
var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81282__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915));
if(cljs.core.truth_(input)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915)], null),com.wsscode.pathom.connect.indexes.merge_io,input);
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.add_warning = (function com$wsscode$pathom$connect$planner$add_warning(graph,warn){
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warnings","com.wsscode.pathom.connect.planner/warnings",-782452265),com.wsscode.pathom.misc.vconj,warn);
});
/**
 * Find conflicting keys between maps m1 and m2, same keys with same values are not
 *   considered conflicting keys.
 */
com.wsscode.pathom.connect.planner.params_conflicting_keys = (function com$wsscode$pathom$connect$planner$params_conflicting_keys(m1,m2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1((function (p1__81294_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m1,p1__81294_SHARP_),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m2,p1__81294_SHARP_));
})),clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m1)),cljs.core.set(cljs.core.keys(m2))));
});
/**
 * Merge params of nodes, in case of conflicting keys a warning will be generated.
 */
com.wsscode.pathom.connect.planner.merge_nodes_params = (function com$wsscode$pathom$connect$planner$merge_nodes_params(graph,target_node_id,p__81297){
var map__81298 = p__81297;
var map__81298__$1 = (((((!((map__81298 == null))))?(((((map__81298.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81298.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81298):map__81298);
var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81298__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577));
if(cljs.core.truth_(params)){
var conflict_keys = com.wsscode.pathom.connect.planner.params_conflicting_keys(params,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577)], null)));
var G__81300 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577)], null),cljs.core.merge,params);
if(cljs.core.seq(conflict_keys)){
return com.wsscode.pathom.connect.planner.add_warning(G__81300,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","warn","com.wsscode.pathom.connect.planner/warn",-358637310),"Conflicting params on resolver call.",new cljs.core.Keyword("com.wsscode.pathom.connect.planner","conflict-params","com.wsscode.pathom.connect.planner/conflict-params",1544070537),conflict_keys], null));
} else {
return G__81300;
}
} else {
return graph;
}
});
/**
 * Merge the foreign-ast from two dynamic nodes, the operations adds each children from
 *   node into foreign-ast of the target node. This uses the requires to detect if some
 *   property is already on the query, so this must be called before merging requires to
 *   get the correct behavior.
 */
com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast = (function com$wsscode$pathom$connect$planner$merge_nodes_foreign_ast(graph,target_node_id,p__81302){
var map__81303 = p__81302;
var map__81303__$1 = (((((!((map__81303 == null))))?(((((map__81303.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81303.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81303):map__81303);
var foreign_ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81303__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243));
var requires = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$3(graph,target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
if(cljs.core.truth_(foreign_ast)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(graph,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),new cljs.core.Keyword(null,"children","children",-940561982)], null),cljs.core.into,cljs.core.remove.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(requires,new cljs.core.Keyword(null,"key","key",-1516042587))),new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(foreign_ast));
} else {
return graph;
}
});
/**
 * Updates target-node-id run-next with the run-next of the last argument. This will do an AND
 *   branch operation with node-id run-next and run-next, updating the reference of node-id
 *   run-next.
 */
com.wsscode.pathom.connect.planner.merge_nodes_run_next = (function com$wsscode$pathom$connect$planner$merge_nodes_run_next(p__81308,env,target_node_id,p__81309){
var map__81311 = p__81308;
var map__81311__$1 = (((((!((map__81311 == null))))?(((((map__81311.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81311.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81311):map__81311);
var graph = map__81311__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81311__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81312 = p__81309;
var map__81312__$1 = (((((!((map__81312 == null))))?(((((map__81312.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81312.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81312):map__81312);
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81312__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var merge_into_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
var run_next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,run_next);
if(com.wsscode.pathom.connect.planner.same_resolver_QMARK_(merge_into_node,run_next_node)){
return (com.wsscode.pathom.connect.planner.collapse_dynamic_nodes.cljs$core$IFn$_invoke$arity$4 ? com.wsscode.pathom.connect.planner.collapse_dynamic_nodes.cljs$core$IFn$_invoke$arity$4(graph,env,target_node_id,run_next) : com.wsscode.pathom.connect.planner.collapse_dynamic_nodes.call(null,graph,env,target_node_id,run_next));
} else {
return com.wsscode.pathom.connect.planner.set_root_node((function (){var _LT__GT_ = (function (){var G__81317 = com.wsscode.pathom.connect.planner.set_root_node(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(merge_into_node));
var G__81318 = env;
var G__81319 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),run_next], null);
return (com.wsscode.pathom.connect.planner.compute_root_and.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.compute_root_and.cljs$core$IFn$_invoke$arity$3(G__81317,G__81318,G__81319) : com.wsscode.pathom.connect.planner.compute_root_and.call(null,G__81317,G__81318,G__81319));
})();
return com.wsscode.pathom.connect.planner.collapse_set_node_run_next(_LT__GT_,target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(_LT__GT_));
})(),root);
}
});
/**
 * Pulls source for attributes from node to target-node-id, also updates the attributes
 *   index to respect the transfer.
 */
com.wsscode.pathom.connect.planner.transfer_node_source_attrs = (function com$wsscode$pathom$connect$planner$transfer_node_source_attrs(graph,target_node_id,p__81324){
var map__81325 = p__81324;
var map__81325__$1 = (((((!((map__81325 == null))))?(((((map__81325.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81325.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81325):map__81325);
var source_for_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81325__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833));
if(cljs.core.truth_(source_for_attrs)){
var _LT__GT_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),source_for_attrs);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__81322_SHARP_,p2__81323_SHARP_){
return cljs.core.assoc_in(p1__81322_SHARP_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),p2__81323_SHARP_], null),target_node_id);
}),_LT__GT_,source_for_attrs);
} else {
return graph;
}
});
/**
 * Set the run next for each after node to be target-node-id.
 */
com.wsscode.pathom.connect.planner.transfer_node_after_nodes = (function com$wsscode$pathom$connect$planner$transfer_node_after_nodes(graph,target_node_id,p__81329){
var map__81330 = p__81329;
var map__81330__$1 = (((((!((map__81330 == null))))?(((((map__81330.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81330.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81330):map__81330);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81330__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
if(cljs.core.seq(after_nodes)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__81327_SHARP_,p2__81328_SHARP_){
return com.wsscode.pathom.connect.planner.set_node_run_next(p1__81327_SHARP_,p2__81328_SHARP_,target_node_id);
}),graph,after_nodes);
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.collapse_nodes_branch = (function com$wsscode$pathom$connect$planner$collapse_nodes_branch(graph,env,target_node_id,node_id){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,node_id)){
return graph;
} else {
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.transfer_node_source_attrs(com.wsscode.pathom.connect.planner.merge_nodes_run_next(com.wsscode.pathom.connect.planner.merge_nodes_params(com.wsscode.pathom.connect.planner.merge_node_input(com.wsscode.pathom.connect.planner.merge_node_requires(com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast(graph,target_node_id,node),target_node_id,node),target_node_id,node),target_node_id,node),env,target_node_id,node),target_node_id,node),target_node_id,node),node_id);
}
});
com.wsscode.pathom.connect.planner.collapse_dynamic_nodes = (function com$wsscode$pathom$connect$planner$collapse_dynamic_nodes(graph,env,target_node_id,node_id){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,node_id)){
return graph;
} else {
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.transfer_node_source_attrs(com.wsscode.pathom.connect.planner.merge_nodes_run_next(com.wsscode.pathom.connect.planner.merge_nodes_params(com.wsscode.pathom.connect.planner.merge_node_requires(com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast(graph,target_node_id,node),target_node_id,node),target_node_id,node),env,target_node_id,node),target_node_id,node),target_node_id,node),node_id);
}
});
/**
 * Merge chained nodes:
 * 
 *   A -> B
 * 
 *   A is target node, B is the node, this collapses things and only A will exist after.
 */
com.wsscode.pathom.connect.planner.collapse_nodes_chain = (function com$wsscode$pathom$connect$planner$collapse_nodes_chain(graph,target_node_id,node_id){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target_node_id,node_id)){
return graph;
} else {
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_source_attrs(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.set_node_run_next(com.wsscode.pathom.connect.planner.merge_nodes_params(com.wsscode.pathom.connect.planner.merge_node_requires(com.wsscode.pathom.connect.planner.merge_nodes_foreign_ast(graph,target_node_id,node),target_node_id,node),target_node_id,node),target_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(node)),target_node_id,node),target_node_id,node),node_id);
}
});
/**
 * Given a branch node is the root, this function will add the new node as part
 *   of that branch node. If the node is a repeating dynamic node it will cause the new node
 *   to be collapsed into the already existent dynamic node.
 */
com.wsscode.pathom.connect.planner.add_branch_node = (function com$wsscode$pathom$connect$planner$add_branch_node(p__81333,p__81334,p__81335){
var map__81336 = p__81333;
var map__81336__$1 = (((((!((map__81336 == null))))?(((((map__81336.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81336.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81336):map__81336);
var graph = map__81336__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81336__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81337 = p__81334;
var map__81337__$1 = (((((!((map__81337 == null))))?(((((map__81337.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81337.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81337):map__81337);
var env = map__81337__$1;
var branch_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81337__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895));
var map__81338 = p__81335;
var map__81338__$1 = (((((!((map__81338 == null))))?(((((map__81338.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81338.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81338):map__81338);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81338__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var root_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,root);
var collapse_node_id = com.wsscode.pathom.connect.planner.find_branch_node_to_merge(graph,env,node);
if(cljs.core.truth_(collapse_node_id)){
var G__81344 = com.wsscode.pathom.connect.planner.collapse_nodes_branch(graph,env,collapse_node_id,node_id);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(branch_type,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453))){
return com.wsscode.pathom.connect.planner.merge_node_requires(G__81344,root,com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id));
} else {
return G__81344;
}
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(root_node),node_id)){
return graph;
} else {
if(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(branch_type,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)))?(function (){var and__4115__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(node),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(root_node));
} else {
return and__4115__auto__;
}
})():false))){
return com.wsscode.pathom.connect.planner.remove_node(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (g,node_id__$1){
var G__81347 = g;
var G__81348 = env;
var G__81349 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),node_id__$1], null);
return (com.wsscode.pathom.connect.planner.add_branch_node.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.add_branch_node.cljs$core$IFn$_invoke$arity$3(G__81347,G__81348,G__81349) : com.wsscode.pathom.connect.planner.add_branch_node.call(null,G__81347,G__81348,G__81349));
}),graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(node)),node_id);
} else {
var G__81351 = com.wsscode.pathom.connect.planner.add_after_node(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root,branch_type], null),com.wsscode.pathom.misc.sconj,node_id),node_id,root);
var G__81351__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(branch_type,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)))?com.wsscode.pathom.connect.planner.merge_node_requires(G__81351,root,node):G__81351);
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.optimize_merge_QMARK_(graph,node))){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__81351__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
} else {
return G__81351__$1;
}
}

}
}
});
com.wsscode.pathom.connect.planner.create_branch_node = (function com$wsscode$pathom$connect$planner$create_branch_node(p__81356,env,node,branch_node){
var map__81357 = p__81356;
var map__81357__$1 = (((((!((map__81357 == null))))?(((((map__81357.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81357.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81357):map__81357);
var graph = map__81357__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81357__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var root_next = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)], null));
var optimize_next_QMARK_ = com.wsscode.pathom.connect.planner.optimize_merge_QMARK_(graph,node);
var branch_node__$1 = (function (){var G__81360 = branch_node;
if(cljs.core.truth_(optimize_next_QMARK_)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__81360,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),root_next);
} else {
return G__81360;
}
})();
var branch_node_id = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450).cljs$core$IFn$_invoke$arity$1(branch_node__$1);
return com.wsscode.pathom.connect.planner.add_branch_node(com.wsscode.pathom.connect.planner.set_root_node((function (){var G__81363 = com.wsscode.pathom.connect.planner.add_after_node(cljs.core.assoc_in(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),branch_node_id], null),branch_node__$1),root,branch_node_id);
if(cljs.core.truth_(optimize_next_QMARK_)){
return com.wsscode.pathom.connect.planner.set_after_node(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__81363,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),root], null),cljs.core.dissoc,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)),root_next,branch_node_id);
} else {
return G__81363;
}
})(),branch_node_id),env,node);
});
com.wsscode.pathom.connect.planner.branch_add_and_node = (function com$wsscode$pathom$connect$planner$branch_add_and_node(graph,branch_node_id,node_id){
return com.wsscode.pathom.connect.planner.add_after_node(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),branch_node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)], null),com.wsscode.pathom.misc.sconj,node_id),node_id,branch_node_id);
});
com.wsscode.pathom.connect.planner.can_merge_and_nodes_QMARK_ = (function com$wsscode$pathom$connect$planner$can_merge_and_nodes_QMARK_(n1,n2){
return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n1),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n2))) || ((((((new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n1) == null)) || ((new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(n2) == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(n1),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(n2))))));
});
/**
 * Collapse AND node next-node into AND node target-node-id.
 */
com.wsscode.pathom.connect.planner.collapse_and_nodes = (function com$wsscode$pathom$connect$planner$collapse_and_nodes(graph,target_node_id,node_id){
var map__81371 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__81371__$1 = (((((!((map__81371 == null))))?(((((map__81371.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81371.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81371):map__81371);
var node = map__81371__$1;
var run_and = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81371__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453));
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81371__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var target_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,target_node_id);
if(com.wsscode.pathom.connect.planner.can_merge_and_nodes_QMARK_(target_node,node)){
} else {
throw (new Error(["Assert failed: ","Can't collapse AND nodes with different run-next values.","\n","(can-merge-and-nodes? target-node node)"].join('')));
}

if(cljs.core.truth_((function (){var and__4115__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(target_node);
if(cljs.core.truth_(and__4115__auto__)){
return run_and;
} else {
return and__4115__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.remove_node(com.wsscode.pathom.connect.planner.transfer_node_after_nodes(com.wsscode.pathom.connect.planner.set_node_run_next_STAR_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (graph__$1,loop_node_id){
return com.wsscode.pathom.connect.planner.branch_add_and_node(graph__$1,target_node_id,loop_node_id);
}),graph,run_and),target_node_id,(function (){var or__4126__auto__ = run_next;
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163).cljs$core$IFn$_invoke$arity$1(target_node);
}
})()),target_node_id,node),node_id);
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.compute_root_branch = (function com$wsscode$pathom$connect$planner$compute_root_branch(p__81373,p__81374,p__81375,branch_node_factory){
var map__81376 = p__81373;
var map__81376__$1 = (((((!((map__81376 == null))))?(((((map__81376.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81376.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81376):map__81376);
var graph = map__81376__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81376__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81377 = p__81374;
var map__81377__$1 = (((((!((map__81377 == null))))?(((((map__81377.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81377.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81377):map__81377);
var env = map__81377__$1;
var branch_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81377__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895));
var map__81378 = p__81375;
var map__81378__$1 = (((((!((map__81378 == null))))?(((((map__81378.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81378.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81378):map__81378);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81378__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
if(cljs.core.truth_(node_id)){
var root_node = com.wsscode.pathom.connect.planner.get_root_node(graph);
var next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var root_sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(root_node);
var next_sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(next_node);
if(cljs.core.not(next_node)){
return graph;
} else {
if(cljs.core.not(root_node)){
return com.wsscode.pathom.connect.planner.set_root_node(graph,node_id);
} else {
if(cljs.core.truth_((function (){var and__4115__auto__ = root_sym;
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root_sym,next_sym);
} else {
return and__4115__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.set_root_node(com.wsscode.pathom.connect.planner.collapse_nodes_branch(graph,env,node_id,root),node_id);
} else {
if(cljs.core.truth_((function (){var and__4115__auto__ = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(root_node);
if(cljs.core.truth_(and__4115__auto__)){
var and__4115__auto____$1 = new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(next_node);
if(cljs.core.truth_(and__4115__auto____$1)){
return com.wsscode.pathom.connect.planner.can_merge_and_nodes_QMARK_(root_node,next_node);
} else {
return and__4115__auto____$1;
}
} else {
return and__4115__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.collapse_and_nodes(graph,root,node_id);
} else {
if(cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(next_node,branch_type);
if(cljs.core.truth_(and__4115__auto__)){
return root_sym;
} else {
return and__4115__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.add_branch_node(com.wsscode.pathom.connect.planner.set_root_node(graph,node_id),env,root_node);
} else {
if(cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(root_node,branch_type);
if(cljs.core.truth_(and__4115__auto__)){
return next_sym;
} else {
return and__4115__auto__;
}
})())){
return com.wsscode.pathom.connect.planner.add_branch_node(graph,env,next_node);
} else {
return com.wsscode.pathom.connect.planner.create_branch_node(graph,env,next_node,(branch_node_factory.cljs$core$IFn$_invoke$arity$0 ? branch_node_factory.cljs$core$IFn$_invoke$arity$0() : branch_node_factory.call(null)));

}
}
}
}
}
}
} else {
return graph;
}
});
com.wsscode.pathom.connect.planner.compute_root_or = (function com$wsscode$pathom$connect$planner$compute_root_or(p__81386,p__81387,p__81388){
var map__81389 = p__81386;
var map__81389__$1 = (((((!((map__81389 == null))))?(((((map__81389.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81389.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81389):map__81389);
var graph = map__81389__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81389__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81390 = p__81387;
var map__81390__$1 = (((((!((map__81390 == null))))?(((((map__81390.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81390.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81390):map__81390);
var env = map__81390__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81390__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var map__81391 = p__81388;
var map__81391__$1 = (((((!((map__81391 == null))))?(((((map__81391.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81391.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81391):map__81391);
var node = map__81391__$1;
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81391__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root,node_id)){
return graph;
} else {
return com.wsscode.pathom.connect.planner.compute_root_branch(graph,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664)),node,(function (){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),com.wsscode.pathom.connect.planner.next_node_id(env),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY]),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)])], null);
}));
}
});
com.wsscode.pathom.connect.planner.compute_root_and = (function com$wsscode$pathom$connect$planner$compute_root_and(p__81396,env,p__81397){
var map__81398 = p__81396;
var map__81398__$1 = (((((!((map__81398 == null))))?(((((map__81398.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81398.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81398):map__81398);
var graph = map__81398__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81398__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81399 = p__81397;
var map__81399__$1 = (((((!((map__81399 == null))))?(((((map__81399.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81399.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81399):map__81399);
var node = map__81399__$1;
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81399__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(root,node_id)){
return graph;
} else {
return com.wsscode.pathom.connect.planner.compute_root_branch(graph,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","branch-type","com.wsscode.pathom.connect.planner/branch-type",-2006345895),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453)),node,(function (){
var map__81402 = com.wsscode.pathom.connect.planner.get_root_node(graph);
var map__81402__$1 = (((((!((map__81402 == null))))?(((((map__81402.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81402.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81402):map__81402);
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81402__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),com.wsscode.pathom.connect.planner.next_node_id(env),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),requires,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)])], null);
}));
}
});
com.wsscode.pathom.connect.planner.dynamic_base_provider_sym = new cljs.core.Symbol("com.wsscode.pathom.connect.planner","run-graph-base-provider","com.wsscode.pathom.connect.planner/run-graph-base-provider",506297033,null);
com.wsscode.pathom.connect.planner.inject_index_nested_provides = (function com$wsscode$pathom$connect$planner$inject_index_nested_provides(indexes,p__81404){
var map__81405 = p__81404;
var map__81405__$1 = (((((!((map__81405 == null))))?(((((map__81405.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81405.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81405):map__81405);
var env = map__81405__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81405__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81405__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581));
var sym_provides = (function (){var or__4126__auto__ = com.wsscode.pathom.connect.planner.resolver_provides(env);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY]);
}
})();
var nested_provides = cljs.core.get.cljs$core$IFn$_invoke$arity$2(sym_provides,attribute);
return cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc_in(indexes,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256),com.wsscode.pathom.connect.planner.dynamic_base_provider_sym], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.wsscode.pathom.connect.planner.pc_sym,com.wsscode.pathom.connect.planner.dynamic_base_provider_sym,com.wsscode.pathom.connect.planner.pc_dyn_sym,sym,com.wsscode.pathom.connect.planner.pc_provides,nested_provides])),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746),(function (oir){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (oir__$1,attr){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(oir__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr,cljs.core.PersistentHashSet.EMPTY], null),com.wsscode.pathom.misc.sconj,com.wsscode.pathom.connect.planner.dynamic_base_provider_sym);
}),oir,cljs.core.keys(nested_provides));
}));
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","root-execution-node?","com.wsscode.pathom.connect.planner/root-execution-node?",774937667,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81412){
return cljs.core.map_QMARK_(G__81412);
}),(function (G__81412){
return cljs.core.contains_QMARK_(G__81412,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__81412){
return ((cljs.core.map_QMARK_(G__81412)) && (cljs.core.contains_QMARK_(G__81412,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * A node is a root execution is a node without any ancestors, or all ancestors
 *   are branch nodes.
 * @type {function(!cljs.core.IMap, *): !boolean}
 */
com.wsscode.pathom.connect.planner.root_execution_node_QMARK_ = (function com$wsscode$pathom$connect$planner$root_execution_node_QMARK_(graph,node_id){
var map__81413 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81414){
return cljs.core.map_QMARK_(G__81414);
}),(function (G__81414){
return cljs.core.contains_QMARK_(G__81414,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979));
})], null),(function (G__81414){
return ((cljs.core.map_QMARK_(G__81414)) && (cljs.core.contains_QMARK_(G__81414,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)))], null),null])),cljs.spec.alpha.nilable_impl(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979)], null)),new cljs.core.Keyword(null,"node-id","node-id",779482292),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__81413__$1 = (((((!((map__81413 == null))))?(((((map__81413.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81413.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81413):map__81413);
var retspec81409 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81413__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81408 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81413__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81408)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:835 root-execution-node?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81408,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f81411 = (function (graph__$1,node_id__$1){
var ancestors = (com.wsscode.pathom.connect.planner.node_ancestors.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.node_ancestors.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1) : com.wsscode.pathom.connect.planner.node_ancestors.call(null,graph__$1,node_id__$1));
var nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__81407_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,p1__81407_SHARP_);
}),cljs.core.rest(ancestors));
return (cljs.core.count(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.branch_node_QMARK_,nodes)) === (0));
});
var ret81410 = f81411(graph,node_id);
if(cljs.core.truth_(retspec81409)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:835 root-execution-node?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81409,ret81410);
} else {
}

return ret81410;
});
/**
 * Use AST children nodes and resolver provides data to compute the nested requirements
 *   for dynamic nodes.
 */
com.wsscode.pathom.connect.planner.compute_nested_node_details = (function com$wsscode$pathom$connect$planner$compute_nested_node_details(p__81420){
var map__81421 = p__81420;
var map__81421__$1 = (((((!((map__81421 == null))))?(((((map__81421.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81421.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81421):map__81421);
var env = map__81421__$1;
var ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81421__$1,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
var ast__$1 = com.wsscode.pathom.core.maybe_merge_union_ast(ast);
var nested_graph = (function (){var G__81423 = com.wsscode.pathom.connect.planner.base_graph();
var G__81424 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.planner.inject_index_nested_provides(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_env(),cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null))], 0)),env),com.wsscode.pathom.connect.planner.ast_node,ast__$1);
return (com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2(G__81423,G__81424) : com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.call(null,G__81423,G__81424));
})();
var sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(env);
var root_dyn_nodes = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p1__81416_SHARP_){
return com.wsscode.pathom.connect.planner.root_execution_node_QMARK_(nested_graph,p1__81416_SHARP_);
})),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__81417_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(nested_graph,p1__81417_SHARP_);
}))),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(nested_graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),sym], null)));
var nodes_inputs = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.keep.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163)),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__81418_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(nested_graph,p1__81418_SHARP_);
})),cljs.core.keep.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915))),root_dyn_nodes);
var dyn_requires = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.indexes.merge_io,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),root_dyn_nodes));
var final_deps = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.connect.indexes.merge_io,com.wsscode.pathom.core.ast__GT_shape_descriptor(ast__$1),nodes_inputs);
var children_ast = cljs.core.update.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243).cljs$core$IFn$_invoke$arity$1(cljs.core.first(root_dyn_nodes)),new cljs.core.Keyword(null,"children","children",-940561982),(function (p1__81419_SHARP_){
return cljs.core.filterv(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(final_deps,new cljs.core.Keyword(null,"key","key",-1516042587)),p1__81419_SHARP_);
}));
var ast_SINGLEQUOTE_ = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"root","root",-448657453),new cljs.core.Keyword(null,"children","children",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ast__$1,new cljs.core.Keyword(null,"query","query",-1288509510),edn_query_language.core.ast__GT_query(children_ast),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,"children","children",-940561982),new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(children_ast)], 0))], null)], null);
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),cljs.core.select_keys(dyn_requires,cljs.core.keys(final_deps)),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),ast_SINGLEQUOTE_], null);
});
/**
 * Create a new node representative to run a given resolver.
 */
com.wsscode.pathom.connect.planner.create_resolver_node = (function com$wsscode$pathom$connect$planner$create_resolver_node(graph,p__81425){
var map__81426 = p__81425;
var map__81426__$1 = (((((!((map__81426 == null))))?(((((map__81426.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81426.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81426):map__81426);
var env = map__81426__$1;
var ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81426__$1,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81426__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81426__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915));
var source_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81426__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302));
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81426__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81426__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","sym","com.wsscode.pathom.connect/sym",880324581));
var nested = (cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.seq(new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(ast));
if(and__4115__auto__){
return com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_(env,sym);
} else {
return and__4115__auto__;
}
})())?com.wsscode.pathom.connect.planner.compute_nested_node_details(env):null);
var requires = (cljs.core.truth_(nested)?cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289).cljs$core$IFn$_invoke$arity$1(nested)]):cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY]));
var next_node = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,run_next);
var ast_params = new cljs.core.Keyword(null,"params","params",710516235).cljs$core$IFn$_invoke$arity$1(ast);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym,com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(next_node))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(next_node,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),com.wsscode.pathom.connect.indexes.merge_io,requires),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),input);
} else {
var G__81428 = cljs.core.PersistentArrayMap.createAsIfByAssoc([com.wsscode.pathom.connect.planner.pc_sym,sym,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),com.wsscode.pathom.connect.planner.next_node_id(env),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),requires,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),input]);
var G__81428__$1 = ((cljs.core.seq(ast_params))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__81428,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","params","com.wsscode.pathom.connect.planner/params",600636577),ast_params):G__81428);
var G__81428__$2 = (cljs.core.truth_(com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_(env,sym))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__81428__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243),(cljs.core.truth_(nested)?new cljs.core.Keyword("com.wsscode.pathom.connect.planner","foreign-ast","com.wsscode.pathom.connect.planner/foreign-ast",43189243).cljs$core$IFn$_invoke$arity$1(nested):new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"root","root",-448657453),new cljs.core.Keyword(null,"children","children",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ast], null)], null))):G__81428__$1);
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym,source_sym)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__81428__$2,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302),source_sym);
} else {
return G__81428__$2;
}
}
});
com.wsscode.pathom.connect.planner.include_node = (function com$wsscode$pathom$connect$planner$include_node(graph,_env,p__81429){
var map__81430 = p__81429;
var map__81430__$1 = (((((!((map__81430 == null))))?(((((map__81430.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81430.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81430):map__81430);
var node = map__81430__$1;
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81430__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var sym = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
var G__81432 = cljs.core.assoc_in(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null),node);
if(cljs.core.truth_(sym)){
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__81432,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-syms","com.wsscode.pathom.connect.planner/index-syms",-1320415415),sym], null),com.wsscode.pathom.misc.sconj,node_id);
} else {
return G__81432;
}
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","direct-node-successors","com.wsscode.pathom.connect.planner/direct-node-successors",1948882270,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__81437){
return cljs.core.coll_QMARK_(G__81437);
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null));


/**
 * Direct successors of node, branch nodes and run-next, in case of branch nodes the
 *   branches will always come before the run-next.
 * @type {function(*): !cljs.core.ICollection}
 */
com.wsscode.pathom.connect.planner.direct_node_successors = (function com$wsscode$pathom$connect$planner$direct_node_successors(p__81438){
var map__81439 = p__81438;
var map__81439__$1 = (((((!((map__81439 == null))))?(((((map__81439.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81439.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81439):map__81439);
var node = map__81439__$1;
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81439__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var map__81441 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node","node",581201198)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"node","node",581201198),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__81442){
return cljs.core.coll_QMARK_(G__81442);
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null);
var map__81441__$1 = (((((!((map__81441 == null))))?(((((map__81441.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81441.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81441):map__81441);
var retspec81434 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81441__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81433 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81441__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81433)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:924 direct-node-successors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81433,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
} else {
}

var f81436 = (function (p__81444){
var map__81445 = p__81444;
var map__81445__$1 = (((((!((map__81445 == null))))?(((((map__81445.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81445.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81445):map__81445);
var node__$1 = map__81445__$1;
var run_next__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81445__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var branches = com.wsscode.pathom.connect.planner.node_branches(node__$1);
var G__81447 = cljs.core.PersistentVector.EMPTY;
var G__81447__$1 = (cljs.core.truth_(branches)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__81447,branches):G__81447);
if(cljs.core.truth_(run_next__$1)){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__81447__$1,run_next__$1);
} else {
return G__81447__$1;
}
});
var ret81435 = f81436(node);
if(cljs.core.truth_(retspec81434)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:924 direct-node-successors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81434,ret81435);
} else {
}

return ret81435;
});
com.wsscode.pathom.connect.planner.collect_syms = (function com$wsscode$pathom$connect$planner$collect_syms(var_args){
var G__81450 = arguments.length;
switch (G__81450) {
case 3:
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3 = (function (graph,env,node){
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$4(graph,env,node,cljs.core.PersistentHashSet.EMPTY);
}));

(com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$4 = (function (graph,env,p__81451,syms){
var map__81452 = p__81451;
var map__81452__$1 = (((((!((map__81452 == null))))?(((((map__81452.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81452.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81452):map__81452);
var node_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81452__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450));
var node = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id], null));
var temp__5733__auto__ = com.wsscode.pathom.connect.planner.pc_sym.cljs$core$IFn$_invoke$arity$1(node);
if(cljs.core.truth_(temp__5733__auto__)){
var sym = temp__5733__auto__;
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.dynamic_resolver_QMARK_(env,sym))){
return syms;
} else {
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(syms,sym);
}
} else {
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(syms,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__81448_SHARP_){
return com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3(graph,env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),p1__81448_SHARP_], null));
}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.direct_node_successors(node)], 0)));
}
}));

(com.wsscode.pathom.connect.planner.collect_syms.cljs$lang$maxFixedArity = 4);

com.wsscode.pathom.connect.planner.all_attribute_resolvers = (function com$wsscode$pathom$connect$planner$all_attribute_resolvers(p__81454,attr){
var map__81455 = p__81454;
var map__81455__$1 = (((((!((map__81455 == null))))?(((((map__81455.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81455.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81455):map__81455);
var index_oir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81455__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
var temp__5733__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_oir,attr);
if(cljs.core.truth_(temp__5733__auto__)){
var ir = temp__5733__auto__;
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.cat,cljs.core.vals(ir));
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
});
com.wsscode.pathom.connect.planner.mark_node_unreachable = (function com$wsscode$pathom$connect$planner$mark_node_unreachable(previous_graph,graph,p__81457,env){
var map__81458 = p__81457;
var map__81458__$1 = (((((!((map__81458 == null))))?(((((map__81458.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81458.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81458):map__81458);
var unreachable_syms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81458__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399));
var unreachable_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81458__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492));
var syms = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399).cljs$core$IFn$_invoke$arity$1(previous_graph),cljs.core.into.cljs$core$IFn$_invoke$arity$2(unreachable_syms,com.wsscode.pathom.connect.planner.collect_syms.cljs$core$IFn$_invoke$arity$3(graph,env,com.wsscode.pathom.connect.planner.get_root_node(graph))));
var G__81460 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(previous_graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399),syms,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),unreachable_attrs], 0));
if(clojure.set.subset_QMARK_(com.wsscode.pathom.connect.planner.all_attribute_resolvers(env,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env)),syms)){
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(G__81460,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.conj,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env));
} else {
return G__81460;
}
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-ancestors","com.wsscode.pathom.connect.planner/node-ancestors",1739651886,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__81465){
return cljs.core.vector_QMARK_(G__81465);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),null,null,null));


/**
 * Return all node ancestors. The order of the output will go from closest to farthest
 *   nodes, like breathing out of the current node.
 * @type {function(*, *): !cljs.core.IVector}
 */
com.wsscode.pathom.connect.planner.node_ancestors = (function com$wsscode$pathom$connect$planner$node_ancestors(graph,node_id){
var map__81466 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__81467){
return cljs.core.vector_QMARK_(G__81467);
}),new cljs.core.Keyword(null,"kind","kind",-717265803),cljs.core.vector_QMARK_,new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Symbol("cljs.core","vector?","cljs.core/vector?",-1550392028,null)),null,null,null);
var map__81466__$1 = (((((!((map__81466 == null))))?(((((map__81466.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81466.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81466):map__81466);
var argspec81461 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81466__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81462 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81466__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81461)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:971 node-ancestors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81461,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f81464 = (function (graph__$1,node_id__$1){
var node_queue = com.wsscode.pathom.misc.queue.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node_id__$1], null));
var ancestors = cljs.core.PersistentVector.EMPTY;
while(true){
var temp__5733__auto__ = cljs.core.peek(node_queue);
if(cljs.core.truth_(temp__5733__auto__)){
var node_id_SINGLEQUOTE_ = temp__5733__auto__;
var map__81471 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id_SINGLEQUOTE_);
var map__81471__$1 = (((((!((map__81471 == null))))?(((((map__81471.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81471.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81471):map__81471);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81471__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
var G__82110 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(node_queue),after_nodes);
var G__82111 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ancestors,node_id_SINGLEQUOTE_);
node_queue = G__82110;
ancestors = G__82111;
continue;
} else {
return ancestors;
}
break;
}
});
var ret81463 = f81464(graph,node_id);
if(cljs.core.truth_(retspec81462)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:971 node-ancestors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81462,ret81463);
} else {
}

return ret81463;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","node-successors","com.wsscode.pathom.connect.planner/node-successors",1769357414,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),new cljs.core.Keyword(null,"ret","ret",-468222814),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__81478){
return cljs.core.coll_QMARK_(G__81478);
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null));


/**
 * Find successor nodes of node-id, node-id is included in the list. This will add
 *   branch nodes before run-next nodes. Returns a lazy sequence that traverse the graph
 *   as items are requested.
 * @type {function(*, *): !cljs.core.ICollection}
 */
com.wsscode.pathom.connect.planner.node_successors = (function com$wsscode$pathom$connect$planner$node_successors(graph,node_id){
var map__81479 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),null,new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),(function (G__81480){
return cljs.core.coll_QMARK_(G__81480);
}),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917),true,new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","coll-of","cljs.spec.alpha/coll-of",1019430407,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),null,null,null);
var map__81479__$1 = (((((!((map__81479 == null))))?(((((map__81479.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81479.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81479):map__81479);
var retspec81475 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81479__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81474 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81479__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81474)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:986 node-successors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81474,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id], null));
} else {
}

var f81477 = (function (graph__$1,node_id__$1){
var successors = com.wsscode.pathom.connect.planner.direct_node_successors(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,node_id__$1));
if(cljs.core.seq(successors)){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node_id__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__81473_SHARP_){
return (com.wsscode.pathom.connect.planner.node_successors.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.node_successors.cljs$core$IFn$_invoke$arity$2(graph__$1,p1__81473_SHARP_) : com.wsscode.pathom.connect.planner.node_successors.call(null,graph__$1,p1__81473_SHARP_));
}),successors)));
}),null,null));
} else {
return (new cljs.core.LazySeq(null,(function (){
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node_id__$1], null);
}),null,null));

}
});
var ret81476 = f81477(graph,node_id);
if(cljs.core.truth_(retspec81475)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:986 node-successors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81475,ret81476);
} else {
}

return ret81476;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","resolver-node-requires-attribute?","com.wsscode.pathom.connect.planner/resolver-node-requires-attribute?",-1538827854,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null));


/**
 * @type {function(*, *): !boolean}
 */
com.wsscode.pathom.connect.planner.resolver_node_requires_attribute_QMARK_ = (function com$wsscode$pathom$connect$planner$resolver_node_requires_attribute_QMARK_(p__81487,attribute){
var map__81488 = p__81487;
var map__81488__$1 = (((((!((map__81488 == null))))?(((((map__81488.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81488.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81488):map__81488);
var arg_81482 = map__81488__$1;
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81488__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81488__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","sym","com.wsscode.pathom.connect.planner/sym",-805794815));
var map__81490 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node","com.wsscode.pathom.connect.planner/node",754110552),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),cljs.core.boolean_QMARK_,null,null),new cljs.core.Symbol("cljs.core","boolean?","cljs.core/boolean?",1400713761,null),null,null,null);
var map__81490__$1 = (((((!((map__81490 == null))))?(((((map__81490.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81490.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81490):map__81490);
var retspec81484 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81490__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81483 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81490__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81483)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1000 resolver-node-requires-attribute?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81483,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_81482,attribute], null));
} else {
}

var f81486 = (function (p__81492,attribute__$1){
var map__81493 = p__81492;
var map__81493__$1 = (((((!((map__81493 == null))))?(((((map__81493.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81493.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81493):map__81493);
var arg_81482__$1 = map__81493__$1;
var requires__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81493__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
var sym__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81493__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","sym","com.wsscode.pathom.connect.planner/sym",-805794815));
return cljs.core.boolean$((function (){var and__4115__auto__ = sym__$1;
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core.contains_QMARK_(requires__$1,attribute__$1);
} else {
return and__4115__auto__;
}
})());
});
var ret81485 = f81486(arg_81482,attribute);
if(cljs.core.truth_(retspec81484)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1000 resolver-node-requires-attribute?'s",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81484,ret81485);
} else {
}

return ret81485;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","find-attribute-resolver-in-successors","com.wsscode.pathom.connect.planner/find-attribute-resolver-in-successors",-1688698550,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null));


/**
 * Find the nodes that get the data required for the require in the OR node.
 * @type {function(*, *, *): *}
 */
com.wsscode.pathom.connect.planner.find_attribute_resolver_in_successors = (function com$wsscode$pathom$connect$planner$find_attribute_resolver_in_successors(graph,node_id,attribute){
var map__81500 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword(null,"attribute","attribute",-2074029119)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-id","node-id",779482292),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword(null,"attribute","attribute",-2074029119),new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null);
var map__81500__$1 = (((((!((map__81500 == null))))?(((((map__81500.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81500.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81500):map__81500);
var argspec81496 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81500__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81497 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81500__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81496)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1005 find-attribute-resolver-in-successors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81496,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_id,attribute], null));
} else {
}

var f81499 = (function (graph__$1,node_id__$1,attribute__$1){
return cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__81495_SHARP_){
return com.wsscode.pathom.connect.planner.resolver_node_requires_attribute_QMARK_(com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph__$1,p1__81495_SHARP_),attribute__$1);
}),com.wsscode.pathom.connect.planner.node_successors(graph__$1,node_id__$1)));
});
var ret81498 = f81499(graph,node_id,attribute);
if(cljs.core.truth_(retspec81497)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1005 find-attribute-resolver-in-successors's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81497,ret81498);
} else {
}

return ret81498;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","first-common-ancestor","com.wsscode.pathom.connect.planner/first-common-ancestor",-1105719278,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null));


/**
 * Find first common node ancestor given a list of node ids.
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.first_common_ancestor = (function com$wsscode$pathom$connect$planner$first_common_ancestor(graph,node_ids){
var map__81508 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"node-ids","node-ids",2015830052),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id-set","com.wsscode.pathom.connect.planner/node-id-set",-783594721)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null);
var map__81508__$1 = (((((!((map__81508 == null))))?(((((map__81508.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81508.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81508):map__81508);
var retspec81505 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81508__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81504 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81508__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81504)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1013 first-common-ancestor's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81504,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,node_ids], null));
} else {
}

var f81507 = (function (graph__$1,node_ids__$1){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(node_ids__$1))){
return cljs.core.first(node_ids__$1);
} else {
var ancestors = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__81502_SHARP_){
return com.wsscode.pathom.connect.planner.node_ancestors(graph__$1,p1__81502_SHARP_);
}),node_ids__$1);
var ancestors_SINGLEQUOTE_ = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p1__81503_SHARP_){
return cljs.core.next(p1__81503_SHARP_);
})),ancestors);
var nodes_SINGLEQUOTE_ = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1(ancestors_SINGLEQUOTE_),node_ids__$1);
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(node_ids__$1),cljs.core.count(nodes_SINGLEQUOTE_))){
return (com.wsscode.pathom.connect.planner.first_common_ancestor.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.first_common_ancestor.cljs$core$IFn$_invoke$arity$2(graph__$1,nodes_SINGLEQUOTE_) : com.wsscode.pathom.connect.planner.first_common_ancestor.call(null,graph__$1,nodes_SINGLEQUOTE_));
} else {
return cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (node_chain,new_chain){
var chain_set = cljs.core.set(node_chain);
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(chain_set,new_chain);
}),ancestors));
}
}
});
var ret81506 = f81507(graph,node_ids);
if(cljs.core.truth_(retspec81505)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1013 first-common-ancestor's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81505,ret81506);
} else {
}

return ret81506;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","find-missing-ancestor","com.wsscode.pathom.connect.planner/find-missing-ancestor",1979498976,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"missing","missing",362507769)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null));


/**
 * Find the first common AND node ancestors from missing list, missing is a list
 *   of attributes
 * @type {function(*, *): *}
 */
com.wsscode.pathom.connect.planner.find_missing_ancestor = (function com$wsscode$pathom$connect$planner$find_missing_ancestor(graph,missing){
var map__81514 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"missing","missing",362507769)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword(null,"missing","missing",362507769),new cljs.core.Keyword("com.wsscode.pathom.connect","attributes-set","com.wsscode.pathom.connect/attributes-set",671683205)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),null,null,null);
var map__81514__$1 = (((((!((map__81514 == null))))?(((((map__81514.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81514.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81514):map__81514);
var argspec81510 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81514__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81511 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81514__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81510)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1031 find-missing-ancestor's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81510,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,missing], null));
} else {
}

var f81513 = (function (graph__$1,missing__$1){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(missing__$1))){
return com.wsscode.pathom.connect.planner.get_attribute_node(graph__$1,cljs.core.first(missing__$1));
} else {
return com.wsscode.pathom.connect.planner.first_common_ancestor(graph__$1,cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(com.wsscode.pathom.connect.planner.get_attribute_node,graph__$1)),missing__$1));
}
});
var ret81512 = f81513(graph,missing);
if(cljs.core.truth_(retspec81511)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1031 find-missing-ancestor's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81511,ret81512);
} else {
}

return ret81512;
});
/**
 * Start a recursive call to process the dependencies required by the resolver. It
 *   sets the ::run-next data at the env, it will be used to link the nodes after they
 *   are created in the process.
 */
com.wsscode.pathom.connect.planner.compute_missing_chain = (function com$wsscode$pathom$connect$planner$compute_missing_chain(graph,p__81517,missing){
var map__81518 = p__81517;
var map__81518__$1 = (((((!((map__81518 == null))))?(((((map__81518.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81518.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81518):map__81518);
var env = map__81518__$1;
var graph_before_missing_chain = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81518__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph-before-missing-chain","com.wsscode.pathom.connect.planner/graph-before-missing-chain",1272805834));

if(cljs.core.seq(missing)){
var map__81520 = (function (){var G__81521 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(graph,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var G__81522 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,com.wsscode.pathom.connect.planner.pc_attr),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next-trail","com.wsscode.pathom.connect.planner/run-next-trail",-1115570698),com.wsscode.pathom.misc.sconj,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","attr-deps-trail","com.wsscode.pathom.connect.planner/attr-deps-trail",1387730776),com.wsscode.pathom.misc.sconj,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env)),com.wsscode.pathom.connect.planner.ast_node,edn_query_language.core.query__GT_ast(cljs.core.vec(missing)));
return (com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2 ? com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.cljs$core$IFn$_invoke$arity$2(G__81521,G__81522) : com.wsscode.pathom.connect.planner.compute_run_graph_STAR_.call(null,G__81521,G__81522));
})();
var map__81520__$1 = (((((!((map__81520 == null))))?(((((map__81520.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81520.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81520):map__81520);
var graph_SINGLEQUOTE_ = map__81520__$1;
var index_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81520__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
var still_missing = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (){var or__4126__auto__ = index_attrs;
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),missing);
var all_provided_QMARK_ = cljs.core.not(cljs.core.seq(still_missing));
if(all_provided_QMARK_){
var ancestor = com.wsscode.pathom.connect.planner.find_missing_ancestor(graph_SINGLEQUOTE_,missing);
if(cljs.core.truth_(ancestor)){
} else {
throw (new Error(["Assert failed: ","Error finding ancestor during missing chain computation","\n","ancestor"].join('')));
}

var G__81524 = com.wsscode.pathom.connect.planner.merge_nodes_run_next(graph_SINGLEQUOTE_,env,ancestor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)], null));
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.get_root_node(graph_SINGLEQUOTE_)))){
return com.wsscode.pathom.connect.planner.merge_node_requires(G__81524,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph_SINGLEQUOTE_),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289),cljs.core.zipmap(missing,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY))], null));
} else {
return G__81524;
}
} else {
var map__81525 = com.wsscode.pathom.connect.planner.mark_node_unreachable(graph_before_missing_chain,graph,graph_SINGLEQUOTE_,env);
var map__81525__$1 = (((((!((map__81525 == null))))?(((((map__81525.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81525.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81525):map__81525);
var out_SINGLEQUOTE_ = map__81525__$1;
var unreachable_syms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81525__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399));
var unreachable_attrs = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__81516_SHARP_){
return clojure.set.subset_QMARK_(com.wsscode.pathom.connect.planner.all_attribute_resolvers(env,p1__81516_SHARP_),unreachable_syms);
}),still_missing);
return cljs.core.update.cljs$core$IFn$_invoke$arity$4(out_SINGLEQUOTE_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492),cljs.core.into,unreachable_attrs);
}
} else {
return graph;
}
});
/**
 * Find the runner symbol for a resolver, on normal resolvers that is the resolver symbol,
 *   but for foreign resolvers it uses its ::pc/dynamic-sym.
 */
com.wsscode.pathom.connect.planner.runner_node_sym = (function com$wsscode$pathom$connect$planner$runner_node_sym(p__81527,sym){
var map__81528 = p__81527;
var map__81528__$1 = (((((!((map__81528 == null))))?(((((map__81528.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81528.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81528):map__81528);
var index_resolvers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81528__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256));
var resolver = cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_resolvers,sym);
var or__4126__auto__ = com.wsscode.pathom.connect.planner.pc_dyn_sym.cljs$core$IFn$_invoke$arity$1(resolver);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return sym;
}
});
com.wsscode.pathom.connect.planner.compute_resolver_graph = (function com$wsscode$pathom$connect$planner$compute_resolver_graph(p__81530,env,resolver){
var map__81531 = p__81530;
var map__81531__$1 = (((((!((map__81531 == null))))?(((((map__81531.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81531.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81531):map__81531);
var graph = map__81531__$1;
var unreachable_syms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81531__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-syms","com.wsscode.pathom.connect.planner/unreachable-syms",152766399));
var resolver_SINGLEQUOTE_ = com.wsscode.pathom.connect.planner.runner_node_sym(env,resolver);
if(cljs.core.contains_QMARK_(unreachable_syms,resolver_SINGLEQUOTE_)){
return graph;
} else {
var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,com.wsscode.pathom.connect.planner.pc_sym,resolver_SINGLEQUOTE_,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-sym","com.wsscode.pathom.connect.planner/source-sym",-32676302),resolver], 0));
var node = com.wsscode.pathom.connect.planner.create_resolver_node(graph,env__$1);
return com.wsscode.pathom.connect.planner.compute_root_or(com.wsscode.pathom.connect.planner.include_node(graph,env__$1,node),env__$1,node);

}
});
com.wsscode.pathom.connect.planner.compute_input_resolvers_graph = (function com$wsscode$pathom$connect$planner$compute_input_resolvers_graph(graph,p__81535,inputs,resolvers){
var map__81536 = p__81535;
var map__81536__$1 = (((((!((map__81536 == null))))?(((((map__81536.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81536.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81536):map__81536);
var env = map__81536__$1;
var available_data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81536__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117));
var missing = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1((function (p1__81533_SHARP_){
return cljs.core.contains_QMARK_(available_data,p1__81533_SHARP_);
})),inputs);
var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","input","com.wsscode.pathom.connect.planner/input",713704915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__81534_SHARP_){
return cljs.core.PersistentHashMap.fromArrays([p1__81534_SHARP_],[cljs.core.PersistentArrayMap.EMPTY]);
})),inputs));
if(cljs.core.contains_QMARK_(inputs,com.wsscode.pathom.connect.planner.pc_attr.cljs$core$IFn$_invoke$arity$1(env__$1))){
return graph;
} else {
var _LT__GT_ = graph;
var _LT__GT___$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_LT__GT_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var _LT__GT___$2 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (graph__$1,resolver){
return com.wsscode.pathom.connect.planner.compute_resolver_graph(graph__$1,env__$1,resolver);
}),_LT__GT___$1,resolvers);
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(_LT__GT___$2))){
return com.wsscode.pathom.connect.planner.compute_root_or(com.wsscode.pathom.connect.planner.compute_missing_chain(_LT__GT___$2,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph-before-missing-chain","com.wsscode.pathom.connect.planner/graph-before-missing-chain",1272805834),graph),missing),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph)], null));
} else {
return com.wsscode.pathom.connect.planner.set_root_node(_LT__GT___$2,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph));
}
}
});
/**
 * Walks the graph run next chain until it finds the node that's providing the
 *   attribute.
 */
com.wsscode.pathom.connect.planner.node_for_attribute_in_chain = (function com$wsscode$pathom$connect$planner$node_for_attribute_in_chain(graph,p__81539,root){
var map__81540 = p__81539;
var map__81540__$1 = (((((!((map__81540 == null))))?(((((map__81540.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81540.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81540):map__81540);
var env = map__81540__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81540__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var node_id = root;
while(true){
var map__81542 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id);
var map__81542__$1 = (((((!((map__81542 == null))))?(((((map__81542.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81542.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81542):map__81542);
var run_next = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81542__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-next","com.wsscode.pathom.connect.planner/run-next",932482163));
var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81542__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","requires","com.wsscode.pathom.connect.planner/requires",-2118404289));
var run_and = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81542__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453));
if(cljs.core.truth_(run_and)){
return cljs.core.some(((function (node_id,map__81542,map__81542__$1,run_next,requires,run_and,map__81540,map__81540__$1,env,attribute){
return (function (p1__81538_SHARP_){
return (com.wsscode.pathom.connect.planner.node_for_attribute_in_chain.cljs$core$IFn$_invoke$arity$3 ? com.wsscode.pathom.connect.planner.node_for_attribute_in_chain.cljs$core$IFn$_invoke$arity$3(graph,env,p1__81538_SHARP_) : com.wsscode.pathom.connect.planner.node_for_attribute_in_chain.call(null,graph,env,p1__81538_SHARP_));
});})(node_id,map__81542,map__81542__$1,run_next,requires,run_and,map__81540,map__81540__$1,env,attribute))
,(function (){var G__81544 = run_and;
if(cljs.core.truth_(run_next)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [run_next], null),G__81544);
} else {
return G__81544;
}
})());
} else {
if(cljs.core.contains_QMARK_(requires,attribute)){
return node_id;
} else {
if(cljs.core.truth_(run_next)){
var G__82188 = run_next;
node_id = G__82188;
continue;
} else {
return null;
}
}
}
break;
}
});
com.wsscode.pathom.connect.planner.set_node_source_for_attrs = (function com$wsscode$pathom$connect$planner$set_node_source_for_attrs(graph,p__81545){
var map__81546 = p__81545;
var map__81546__$1 = (((((!((map__81546 == null))))?(((((map__81546.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81546.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81546):map__81546);
var env = map__81546__$1;
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81546__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
var temp__5733__auto__ = com.wsscode.pathom.connect.planner.node_for_attribute_in_chain(graph,env,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph));
if(cljs.core.truth_(temp__5733__auto__)){
var node_id = temp__5733__auto__;
return cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(graph,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","nodes","com.wsscode.pathom.connect.planner/nodes",-1669166979),node_id,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","source-for-attrs","com.wsscode.pathom.connect.planner/source-for-attrs",629277833)], null),com.wsscode.pathom.misc.sconj,attribute),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),cljs.core.assoc,attribute,cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(graph,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097),attribute], null),node_id));
} else {
return graph;
}
});
/**
 * Computes ancestor chain for a given node, it only walks as long as there is a single
 *   parent on the node, if there is a fork (multiple after-nodes) it will stop.
 */
com.wsscode.pathom.connect.planner.node_direct_ancestor_chain = (function com$wsscode$pathom$connect$planner$node_direct_ancestor_chain(graph,node_id){
var node_id_SINGLEQUOTE_ = node_id;
var visited = cljs.core.PersistentHashSet.EMPTY;
var chain = cljs.core.List.EMPTY;
while(true){
if(cljs.core.contains_QMARK_(visited,node_id_SINGLEQUOTE_)){
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Ancestors Cycle detected",visited,node_id_SINGLEQUOTE_], 0));

return chain;
} else {
var map__81550 = com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,node_id_SINGLEQUOTE_);
var map__81550__$1 = (((((!((map__81550 == null))))?(((((map__81550.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81550.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81550):map__81550);
var after_nodes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81550__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","after-nodes","com.wsscode.pathom.connect.planner/after-nodes",-1492377057));
var next_id = cljs.core.first(after_nodes);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(after_nodes))){
var G__82196 = next_id;
var G__82197 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(visited,node_id_SINGLEQUOTE_);
var G__82198 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(chain,node_id_SINGLEQUOTE_);
node_id_SINGLEQUOTE_ = G__82196;
visited = G__82197;
chain = G__82198;
continue;
} else {
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(chain,node_id_SINGLEQUOTE_);
}
}
break;
}
});
/**
 * Traverse node after-node chain and returns the most distant resolver ancestor node id.
 *   This only walks though resolver nodes, branch nodes are removed.
 */
com.wsscode.pathom.connect.planner.find_first_ancestor = (function com$wsscode$pathom$connect$planner$find_first_ancestor(graph,node_id){
return cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-or","com.wsscode.pathom.connect.planner/run-or",-13021664),(function (p1__81553_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,p1__81553_SHARP_);
})),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","run-and","com.wsscode.pathom.connect.planner/run-and",-690922453),(function (p1__81552_SHARP_){
return com.wsscode.pathom.connect.planner.get_node.cljs$core$IFn$_invoke$arity$2(graph,p1__81552_SHARP_);
})),com.wsscode.pathom.connect.planner.node_direct_ancestor_chain(graph,node_id))));
});
com.wsscode.pathom.connect.planner.push_root_to_ancestor = (function com$wsscode$pathom$connect$planner$push_root_to_ancestor(graph,node_id){
return com.wsscode.pathom.connect.planner.set_root_node(graph,com.wsscode.pathom.connect.planner.find_first_ancestor(graph,node_id));
});
com.wsscode.pathom.connect.planner.compute_attribute_graph_STAR_ = (function com$wsscode$pathom$connect$planner$compute_attribute_graph_STAR_(p__81554,p__81555){
var map__81556 = p__81554;
var map__81556__$1 = (((((!((map__81556 == null))))?(((((map__81556.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81556.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81556):map__81556);
var graph = map__81556__$1;
var root = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81556__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var map__81557 = p__81555;
var map__81557__$1 = (((((!((map__81557 == null))))?(((((map__81557.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81557.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81557):map__81557);
var env = map__81557__$1;
var index_oir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81557__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
var attribute = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81557__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","attribute","com.wsscode.pathom.connect/attribute",423188075));
if(cljs.core.truth_(com.wsscode.pathom.connect.planner.get_attribute_node(graph,attribute))){
var node_id = com.wsscode.pathom.connect.planner.get_attribute_node(graph,attribute);
return com.wsscode.pathom.connect.planner.compute_root_and(com.wsscode.pathom.connect.planner.push_root_to_ancestor(com.wsscode.pathom.connect.planner.merge_node_requires(graph,node_id,cljs.core.PersistentArrayMap.createAsIfByAssoc([attribute,cljs.core.PersistentArrayMap.EMPTY])),node_id),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),root], null));
} else {
var graph_SINGLEQUOTE_ = (function (){var _LT__GT_ = graph;
var _LT__GT___$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_LT__GT_,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243));
var _LT__GT___$2 = cljs.core.reduce_kv((function (graph__$1,inputs,resolvers){
return com.wsscode.pathom.connect.planner.compute_input_resolvers_graph(graph__$1,env,inputs,resolvers);
}),_LT__GT___$1,cljs.core.get.cljs$core$IFn$_invoke$arity$2(index_oir,attribute));
return com.wsscode.pathom.connect.planner.set_node_source_for_attrs(_LT__GT___$2,env);
})();
if(cljs.core.truth_(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","root","com.wsscode.pathom.connect.planner/root",-69575243).cljs$core$IFn$_invoke$arity$1(graph_SINGLEQUOTE_))){
return com.wsscode.pathom.connect.planner.compute_root_and(graph_SINGLEQUOTE_,env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","node-id","com.wsscode.pathom.connect.planner/node-id",1016027450),root], null));
} else {
return com.wsscode.pathom.connect.planner.set_root_node(graph_SINGLEQUOTE_,root);
}

}
});
/**
 * Compute the run graph for a given attribute.
 */
com.wsscode.pathom.connect.planner.compute_attribute_graph = (function com$wsscode$pathom$connect$planner$compute_attribute_graph(p__81560,p__81561){
var map__81562 = p__81560;
var map__81562__$1 = (((((!((map__81562 == null))))?(((((map__81562.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81562.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81562):map__81562);
var graph = map__81562__$1;
var unreachable_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81562__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","unreachable-attrs","com.wsscode.pathom.connect.planner/unreachable-attrs",983807492));
var map__81563 = p__81561;
var map__81563__$1 = (((((!((map__81563 == null))))?(((((map__81563.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81563.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81563):map__81563);
var env = map__81563__$1;
var map__81564 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81563__$1,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
var map__81564__$1 = (((((!((map__81564 == null))))?(((((map__81564.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81564.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81564):map__81564);
var attr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81564__$1,new cljs.core.Keyword(null,"key","key",-1516042587));
var available_data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81563__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117));
var attr_deps_trail = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81563__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","attr-deps-trail","com.wsscode.pathom.connect.planner/attr-deps-trail",1387730776));
var index_oir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81563__$1,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,com.wsscode.pathom.connect.planner.pc_attr,attr);
if(((cljs.core.contains_QMARK_(available_data,attr)) || (cljs.core.contains_QMARK_(unreachable_attrs,attr)) || (cljs.core.contains_QMARK_(attr_deps_trail,attr)))){
return graph;
} else {
if(cljs.core.contains_QMARK_(index_oir,attr)){
return com.wsscode.pathom.connect.planner.compute_attribute_graph_STAR_(graph,env__$1);
} else {
return com.wsscode.pathom.connect.planner.add_unreachable_attr(graph,attr);

}
}
});
com.wsscode.pathom.connect.planner.compute_run_graph_STAR_ = (function com$wsscode$pathom$connect$planner$compute_run_graph_STAR_(graph,env){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (graph__$1,ast){
if(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"prop","prop",-515168332),null,new cljs.core.Keyword(null,"join","join",-758861890),null], null), null),new cljs.core.Keyword(null,"type","type",1174270348).cljs$core$IFn$_invoke$arity$1(ast))){
return com.wsscode.pathom.connect.planner.compute_attribute_graph(graph__$1,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),ast));
} else {
return graph__$1;
}
}),graph,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(edn_query_language.core.ident_QMARK_,new cljs.core.Keyword(null,"key","key",-1516042587)),new cljs.core.Keyword(null,"children","children",-940561982).cljs$core$IFn$_invoke$arity$1(com.wsscode.pathom.connect.planner.ast_node.cljs$core$IFn$_invoke$arity$1(env))));
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","compute-run-graph","com.wsscode.pathom.connect.planner/compute-run-graph",475659728,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),new cljs.core.Keyword(null,"arity-1","arity-1",105892478),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),new cljs.core.Keyword(null,"arity-1","arity-1",105892478),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),new cljs.core.Keyword(null,"arity-1","arity-1",105892478)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81577){
return cljs.core.map_QMARK_(G__81577);
})], null),(function (G__81577){
return cljs.core.map_QMARK_(G__81577);
}),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),null])),null),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81578){
return cljs.core.map_QMARK_(G__81578);
}),(function (G__81578){
return cljs.core.contains_QMARK_(G__81578,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__81578){
return cljs.core.contains_QMARK_(G__81578,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__81578){
return ((cljs.core.map_QMARK_(G__81578)) && (cljs.core.contains_QMARK_(G__81578,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__81578,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81579){
return cljs.core.map_QMARK_(G__81579);
}),(function (G__81579){
return cljs.core.contains_QMARK_(G__81579,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__81579){
return cljs.core.contains_QMARK_(G__81579,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__81579){
return ((cljs.core.map_QMARK_(G__81579)) && (cljs.core.contains_QMARK_(G__81579,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__81579,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null))], null),null),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","or","cljs.spec.alpha/or",-831679639,null),new cljs.core.Keyword(null,"arity-2","arity-2",-1366521503),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),new cljs.core.Keyword(null,"arity-1","arity-1",105892478),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null));


/**
 * Generates a run plan for a given environment, the environment should contain the
 *   indexes in it (::pc/index-oir and ::pc/index-resolvers). It computes a plan to execute
 *   one level of an AST, the AST must be provided via the key :edn-query-language.ast/node.
 * 
 *     (compute-run-graph (assoc indexes :edn-query-language.ast/node ...))
 * 
 *   The resulting graph will look like this:
 * 
 *  ::nodes {1 {::node-id 1}}
 *   
 */
com.wsscode.pathom.connect.planner.compute_run_graph = (function com$wsscode$pathom$connect$planner$compute_run_graph(var_args){
var G__81581 = arguments.length;
switch (G__81581) {
case 2:
return com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 1:
return com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$2 = (function (graph,env){
var map__81582 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"graph","graph",1558099509),new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.nilable_impl(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81583){
return cljs.core.map_QMARK_(G__81583);
})], null),(function (G__81583){
return cljs.core.map_QMARK_(G__81583);
}),cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),null])),null),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81584){
return cljs.core.map_QMARK_(G__81584);
}),(function (G__81584){
return cljs.core.contains_QMARK_(G__81584,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__81584){
return cljs.core.contains_QMARK_(G__81584,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__81584){
return ((cljs.core.map_QMARK_(G__81584)) && (cljs.core.contains_QMARK_(G__81584,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__81584,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"graph","graph",1558099509),cljs.core.list(new cljs.core.Symbol("com.fulcrologic.guardrails.core","?","com.fulcrologic.guardrails.core/?",1513394117,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null))),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__81582__$1 = (((((!((map__81582 == null))))?(((((map__81582.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81582.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81582):map__81582);
var argspec81569 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81582__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81570 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81582__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81569)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81569,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [graph,env], null));
} else {
}

var f81572 = (function (graph__$1,env__$1){
return com.wsscode.pathom.connect.planner.compute_run_graph_STAR_(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_graph(),graph__$1], 0)),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_env(),env__$1], 0)));
});
var ret81571 = f81572(graph,env);
if(cljs.core.truth_(retspec81570)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81570,ret81571);
} else {
}

return ret81571;
}));

(com.wsscode.pathom.connect.planner.compute_run_graph.cljs$core$IFn$_invoke$arity$1 = (function (env){
var map__81586 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81587){
return cljs.core.map_QMARK_(G__81587);
}),(function (G__81587){
return cljs.core.contains_QMARK_(G__81587,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957));
}),(function (G__81587){
return cljs.core.contains_QMARK_(G__81587,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746));
})], null),(function (G__81587){
return ((cljs.core.map_QMARK_(G__81587)) && (cljs.core.contains_QMARK_(G__81587,new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))) && (cljs.core.contains_QMARK_(G__81587,new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746))));
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null)]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("com.wsscode.pathom.connect","index-oir","com.wsscode.pathom.connect/index-oir",976969746)], null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","available-data","com.wsscode.pathom.connect.planner/available-data",-2081264117),new cljs.core.Keyword("com.wsscode.pathom.connect","index-resolvers","com.wsscode.pathom.connect/index-resolvers",916075256)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","graph","com.wsscode.pathom.connect.planner/graph",507959439),null,null,null);
var map__81586__$1 = (((((!((map__81586 == null))))?(((((map__81586.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81586.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81586):map__81586);
var argspec81573 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81586__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var retspec81574 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81586__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
if(cljs.core.truth_(argspec81573)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81573,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [env], null));
} else {
}

var f81576 = (function (env__$1){
return com.wsscode.pathom.connect.planner.compute_run_graph_STAR_(com.wsscode.pathom.connect.planner.base_graph(),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([com.wsscode.pathom.connect.planner.base_env(),env__$1], 0)));
});
var ret81575 = f81576(env);
if(cljs.core.truth_(retspec81574)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1238 compute-run-graph's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81574,ret81575);
} else {
}

return ret81575;
}));

(com.wsscode.pathom.connect.planner.compute_run_graph.cljs$lang$maxFixedArity = 2);

cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","prepare-ast","com.wsscode.pathom.connect.planner/prepare-ast",-158664909,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235),new cljs.core.Keyword(null,"ast","ast",-860334068)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81594){
return cljs.core.map_QMARK_(G__81594);
})], null),(function (G__81594){
return cljs.core.map_QMARK_(G__81594);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)])),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null,null));


/**
 * Prepare AST from query. This will lift placeholder nodes, convert
 *   query to AST and remove children keys that are already present in the current
 *   entity.
 * @type {function(!cljs.core.IMap, *): *}
 */
com.wsscode.pathom.connect.planner.prepare_ast = (function com$wsscode$pathom$connect$planner$prepare_ast(env,ast){
var map__81595 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"env","env",-1815813235),new cljs.core.Keyword(null,"ast","ast",-860334068)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81596){
return cljs.core.map_QMARK_(G__81596);
})], null),(function (G__81596){
return cljs.core.map_QMARK_(G__81596);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)])),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt","opt",-794706369),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.core","entity","com.wsscode.pathom.core/entity",884706031),new cljs.core.Keyword("com.wsscode.pathom.core","placeholder-prefixes","com.wsscode.pathom.core/placeholder-prefixes",-1362240644)], null)),new cljs.core.Keyword(null,"ast","ast",-860334068),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null),new cljs.core.Keyword("edn-query-language.ast","node","edn-query-language.ast/node",-1614840957),null,null,null);
var map__81595__$1 = (((((!((map__81595 == null))))?(((((map__81595.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81595.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81595):map__81595);
var retspec81591 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81595__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81590 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81595__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81590)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1271 prepare-ast's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81590,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,ast], null));
} else {
}

var f81593 = (function (env__$1,ast__$1){
var entity = com.wsscode.pathom.core.entity.cljs$core$IFn$_invoke$arity$1(env__$1);
return cljs.core.update.cljs$core$IFn$_invoke$arity$3(com.wsscode.pathom.core.lift_placeholders_ast(env__$1,ast__$1),new cljs.core.Keyword(null,"children","children",-940561982),(function (children){
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$1((function (p1__81589_SHARP_){
return cljs.core.contains_QMARK_(entity,new cljs.core.Keyword(null,"key","key",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__81589_SHARP_));
})),children);
}));
});
var ret81592 = f81593(env,ast);
if(cljs.core.truth_(retspec81591)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1271 prepare-ast's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81591,ret81592);
} else {
}

return ret81592;
});
cljs.spec.alpha.def_impl(new cljs.core.Symbol("com.wsscode.pathom.connect.planner","graph-provides","com.wsscode.pathom.connect.planner/graph-provides",1698174299,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81603){
return cljs.core.map_QMARK_(G__81603);
}),(function (G__81603){
return cljs.core.contains_QMARK_(G__81603,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
})], null),(function (G__81603){
return ((cljs.core.map_QMARK_(G__81603)) && (cljs.core.contains_QMARK_(G__81603,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null,null));


/**
 * Get a set with all provided attributes from the graph.
 * @type {function(!cljs.core.IMap): *}
 */
com.wsscode.pathom.connect.planner.graph_provides = (function com$wsscode$pathom$connect$planner$graph_provides(p__81604){
var map__81605 = p__81604;
var map__81605__$1 = (((((!((map__81605 == null))))?(((((map__81605.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81605.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81605):map__81605);
var arg_81598 = map__81605__$1;
var index_attrs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81605__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
var map__81607 = cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"arg1","arg1",951899358)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__81608){
return cljs.core.map_QMARK_(G__81608);
}),(function (G__81608){
return cljs.core.contains_QMARK_(G__81608,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
})], null),(function (G__81608){
return ((cljs.core.map_QMARK_(G__81608)) && (cljs.core.contains_QMARK_(G__81608,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"arg1","arg1",951899358),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null),new cljs.core.Keyword("com.wsscode.pathom.parser","provides","com.wsscode.pathom.parser/provides",1167350507),null,null,null);
var map__81607__$1 = (((((!((map__81607 == null))))?(((((map__81607.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81607.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81607):map__81607);
var retspec81600 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81607__$1,new cljs.core.Keyword(null,"ret","ret",-468222814));
var argspec81599 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81607__$1,new cljs.core.Keyword(null,"args","args",1315556576));
if(cljs.core.truth_(argspec81599)){
com.fulcrologic.guardrails.core.run_check(true,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1287 graph-provides's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),argspec81599,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg_81598], null));
} else {
}

var f81602 = (function (p__81610){
var map__81611 = p__81610;
var map__81611__$1 = (((((!((map__81611 == null))))?(((((map__81611.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__81611.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__81611):map__81611);
var arg_81598__$1 = map__81611__$1;
var index_attrs__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__81611__$1,new cljs.core.Keyword("com.wsscode.pathom.connect.planner","index-attrs","com.wsscode.pathom.connect.planner/index-attrs",698556097));
return cljs.core.set(cljs.core.keys(index_attrs__$1));
});
var ret81601 = f81602(arg_81598);
if(cljs.core.truth_(retspec81600)){
com.fulcrologic.guardrails.core.run_check(false,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fn-name","fn-name",-766594004),"com/wsscode/pathom/connect/planner.cljc:1287 graph-provides's",new cljs.core.Keyword(null,"emit-spec?","emit-spec?",-837774868),true,new cljs.core.Keyword(null,"log-level","log-level",862121670),null,new cljs.core.Keyword(null,"throw?","throw?",-2036749118),false,new cljs.core.Keyword(null,"vararg?","vararg?",1908105777),false], null),retspec81600,ret81601);
} else {
}

return ret81601;
});

//# sourceMappingURL=com.wsscode.pathom.connect.planner.js.map
