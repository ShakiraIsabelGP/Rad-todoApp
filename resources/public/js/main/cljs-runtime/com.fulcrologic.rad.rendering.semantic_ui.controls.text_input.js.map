{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/controls/text_input.cljc"],"mappings":";AAWA,AAAA,AAAA;AAAA,AAAAA,AAAA,AAAA,AAC0B,AAAKsB,AAAEA,AAAEA;AAAT,AAAA;AAD1B,AAAA,AAAoBH;AAApB,AAAA,AAAAlB,AAAA,AAAoBkB;AAApB,AAAA,AAAAjB,AAAA,AAAAC,AAAAA,AAAAA,AAAoBgB,AAAAA;AAApBjB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AAAiCkB;AAAjC,AAAAb,AAAAL,AAAA,AAA0CmB;AAA1C,AAEE,AAAMG,AAAS,AAACC,AAA2BL;AACrCM,AAAS,AAACvB,AAAAA,AAAAA,AAAWiB,AAAAA;AAD3BG,AAE+E,AAAChB,AAAIiB,AAASH;AAF7FE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnB,AAAA,AAAAmB,AAAA,AAAA,AAAA,AAAA,AAAAlB,AAAAC,AAAAiB,AAAAA;AAAAA,AAEsEU;AAFtE,AAAA1B,AAAAgB,AAAA,AAEcI;AAFd,AAAApB,AAAAgB,AAAA,AAEoBK;AAFpB,AAAArB,AAAAgB,AAAA,AAE6BM;AAF7B,AAAAtB,AAAAgB,AAAA,AAEkCO;AAFlC,AAAAvB,AAAAgB,AAAA,AAE8CQ;AAF9C,AAAAxB,AAAAgB,AAAA,AAEwDS;AAFxD,AAGE,AAAMC;AAAN,AACE,AAAMN,AAAY,AAACQ,AAAGR,AAAMP;AACtBW,AAAY,AAACI,AAAGJ,AAAUX;AAC1BU,AAAY,AAACM,AAAGN;AAChBE,AAAY,AAAAK,AAAI,AAAA,AAAML;AAAV,AAAA,AAAAK;AAAAA;;AAAoB,AAACF,AAAGH,AAASZ;;;AAHnD,AAAAc,AAIMI;AAJN,AAImB,AAACC,AAAuBnB,AAASC,AAAY,AAAAa,AAACM;;AAC3DC,AAAY,AAAKC;AAAL,AAAU,AAAMC,AAAE,AAACH,AAAiBE;AAA1B,AACE,AAAMd;AAAN,AAAe,AAACA,AAAAA,AAAAA,AAASR,AAAAA,AAASuB,AAAAA;;AAAlC;;;AACxBC,AAAY,AAACC,AAAsBzB,AAASC;AAPlD,AAQE,AAAMW;AAAN,AACE,AAAAc,AAAA,AAAA,AAAA,AAAA,AAA0B,AAAKzB,AAC7B,AAAAyB,AAAA,AAAA,AAAA,AAAWnB,AACX,AAAIE,AACF,AAAAiB,AAAA,AAAA,AACE,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAmB,AAAA,AAAKjB,AACxB,AAAAiB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAyB,AAACC,AAAQhB,AACT,AAAKD,AACLQ,AACAG,AACA,AAAKC;AAAL,AAAU,AAAM,AAACM,AAAWN;AAAlB,AAAuB,AAACD,AAAKC;;AAA7B;;AANrC,AAEE,AAAA,AAKyB,AAAKE,AAChC,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAyB,AAACC,AAAQhB,AACT,AAAKD,AACLQ,AACAG,AACA,AAAKC;AAAL,AAAU,AAAM,AAACM,AAAWN;AAAlB,AAAuB,AAACD,AAAKC;;AAA7B;;AAfvC,AAWI,AAAA,AAKyB,AAAKE;;AAjBpC;;;AATJ;;;;AALJ,AAAA,AAAA,AAAApC,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;AAAA,AAAAC,AAAA,AAAAT,AAAAP,AAAA,AAAOkB;;;AAAP,AAAAD,AAAA,AAAAjB,AAAOkB;AAiCP,AAAK+B,AAAe,AAAA,AAAA,AAAA,AAACC,AAAahC","names":["options__56259__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__89177","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/com","js/com.fulcrologic","js/com.fulcrologic.rad","js/com.fulcrologic.rad.rendering","js/com.fulcrologic.rad.rendering.semantic-ui","js/com.fulcrologic.rad.rendering.semantic-ui.controls","js/com.fulcrologic.rad.rendering.semantic-ui.controls.text-input","js/com.fulcrologic.rad.rendering.semantic-ui.controls.text-input.TextControl","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","com.fulcrologic.rad.rendering.semantic-ui.controls.text-input/TextControl","this","instance","control-key","_","map__89179","controls","com.fulcrologic.rad.control.component_controls","props","label","onChange","icon","placeholder","disabled?","visible?","control","p1__89176#","com.fulcrologic.rad.options_util._QMARK__BANG_","com.fulcrologic.rad.options-util/?!","or__4126__auto__","chg!","com.fulcrologic.rad.control/set-parameter!","com.fulcrologic.fulcro.dom.events/target-value","run!","evt","v","value","com.fulcrologic.rad.control/current-value","com.fulcrologic.fulcro.dom.macro_create_element","cljs.core/boolean","com.fulcrologic.fulcro.dom.events/enter?","com.fulcrologic.rad.rendering.semantic-ui.controls.text-input/render-control","com.fulcrologic.fulcro.components.factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.controls.text-input\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.ui-state-machines :as uism]\n    [com.fulcrologic.fulcro.dom.events :as evt]\n    [com.fulcrologic.rad.control :as control]\n    [com.fulcrologic.rad.options-util :refer [?! debounce]]\n    [taoensso.timbre :as log]\n    #?(:cljs [com.fulcrologic.fulcro.dom :as dom]\n       :clj  [com.fulcrologic.fulcro.dom-server :as dom])))\n\n(defsc TextControl [this {:keys [instance control-key]}]\n  {:shouldComponentUpdate (fn [_ _ _] true)}\n  (let [controls (control/component-controls instance)\n        props    (comp/props instance)\n        {:keys [label onChange icon placeholder disabled? visible?] :as control} (get controls control-key)]\n    (when control\n      (let [label       (?! label instance)\n            disabled?   (?! disabled? instance)\n            placeholder (?! placeholder)\n            visible?    (or (nil? visible?) (?! visible? instance))\n            chg!        #(control/set-parameter! instance control-key (evt/target-value %))\n            run!        (fn [evt] (let [v (evt/target-value evt)]\n                                    (when onChange (onChange instance v))))\n            value       (control/current-value instance control-key)]\n        (when visible?\n          (dom/div :.ui.field {:key (str control-key)}\n            (dom/label label)\n            (if icon\n              (dom/div :.ui.icon.input\n                (dom/i {:className (str icon \" icon\")})\n                (dom/input {:readOnly    (boolean disabled?)\n                            :placeholder (str placeholder)\n                            :onChange    chg!\n                            :onBlur      run!\n                            :onKeyDown   (fn [evt] (when (evt/enter? evt) (run! evt)))\n                            :value       (str value)}))\n              (dom/input {:readOnly    (boolean disabled?)\n                          :placeholder (str placeholder)\n                          :onChange    chg!\n                          :onBlur      run!\n                          :onKeyDown   (fn [evt] (when (evt/enter? evt) (run! evt)))\n                          :value       (str value)}))))))))\n\n(def render-control (comp/factory TextControl {:keyfn :control-key}))\n"]}