{"version":3,"sources":["cljc/java_time/duration.cljs"],"mappings":"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","names":["cljc.java-time.duration/zero","goog.object/get","java.time/Duration","cljc.java-time.duration/minus-minutes","this15016","long15017","cljc.java-time.duration/to-nanos","this15018","cljc.java-time.duration/minus-millis","this15019","long15020","cljc.java-time.duration/minus-hours","this15021","long15022","cljc.java-time.duration/of-days","long15023","cljs.core.js_invoke","cljc.java-time.duration/is-negative","this15024","cljc.java-time.duration/of","long15025","java-time-temporal-TemporalUnit15026","cljc.java-time.duration/is-zero","this15027","cljc.java-time.duration/multiplied-by","this15028","long15029","cljc.java-time.duration/with-nanos","this15030","int15031","cljc.java-time.duration/get-units","this15032","cljc.java-time.duration/get-nano","this15033","cljc.java-time.duration/plus-millis","this15034","long15035","cljc.java-time.duration/to-minutes","this15036","cljc.java-time.duration/minus-seconds","this15037","long15038","cljc.java-time.duration/plus-nanos","this15039","long15040","var_args","G__72211","cljc.java-time.duration/plus","js/Error","this15041","java-time-Duration15042","this15043","long15044","java-time-temporal-TemporalUnit15045","cljc.java-time.duration/divided-by","this15046","long15047","cljc.java-time.duration/plus-minutes","this15048","long15049","cljc.java-time.duration/to-string","this15050","G__72215","cljc.java-time.duration/minus","this15051","java-time-Duration15052","this15053","long15054","java-time-temporal-TemporalUnit15055","cljc.java-time.duration/add-to","this15056","java-time-temporal-Temporal15057","cljc.java-time.duration/plus-hours","this15058","long15059","cljc.java-time.duration/plus-days","this15060","long15061","cljc.java-time.duration/of-hours","long15062","cljc.java-time.duration/to-millis","this15063","cljc.java-time.duration/to-hours","this15064","cljc.java-time.duration/of-nanos","long15065","cljc.java-time.duration/of-millis","long15066","cljc.java-time.duration/negated","this15067","cljc.java-time.duration/abs","this15068","cljc.java-time.duration/between","java-time-temporal-Temporal15069","java-time-temporal-Temporal15070","cljc.java-time.duration/get-seconds","this15071","cljc.java-time.duration/from","java-time-temporal-TemporalAmount15072","cljc.java-time.duration/minus-nanos","this15073","long15074","cljc.java-time.duration/parse","java-lang-CharSequence15075","cljc.java-time.duration/hash-code","this15076","cljc.java-time.duration/with-seconds","this15077","long15078","cljc.java-time.duration/of-minutes","long15079","cljc.java-time.duration/subtract-from","this15080","java-time-temporal-Temporal15081","cljc.java-time.duration/compare-to","this15082","java-time-Duration15083","cljc.java-time.duration/plus-seconds","this15084","long15085","cljc.java-time.duration/get","this15086","java-time-temporal-TemporalUnit15087","cljc.java-time.duration/equals","this15088","java-lang-Object15089","G__72218","cljc.java-time.duration/of-seconds","long15090","long15091","long15092","cljc.java-time.duration/minus-days","this15093","long15094","cljc.java-time.duration/to-days","this15095"],"sourcesContent":["(ns cljc.java-time.duration (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [Duration]]))\n(def zero (goog.object/get java.time.Duration \"ZERO\"))\n(clojure.core/defn minus-minutes {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15016 ^long long15017] (.minusMinutes this15016 long15017)))\n(clojure.core/defn to-nanos {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this15018] (.toNanos this15018)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15019 ^long long15020] (.minusMillis this15019 long15020)))\n(clojure.core/defn minus-hours {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15021 ^long long15022] (.minusHours this15021 long15022)))\n(clojure.core/defn of-days {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long15023] (js-invoke java.time.Duration \"ofDays\" long15023)))\n(clojure.core/defn is-negative {:arglists (quote ([\"java.time.Duration\"]))} (^boolean [^js/JSJoda.Duration this15024] (.isNegative this15024)))\n(clojure.core/defn of {:arglists (quote ([\"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Duration [^long long15025 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15026] (js-invoke java.time.Duration \"of\" long15025 java-time-temporal-TemporalUnit15026)))\n(clojure.core/defn is-zero {:arglists (quote ([\"java.time.Duration\"]))} (^boolean [^js/JSJoda.Duration this15027] (.isZero this15027)))\n(clojure.core/defn multiplied-by {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15028 ^long long15029] (.multipliedBy this15028 long15029)))\n(clojure.core/defn with-nanos {:arglists (quote ([\"java.time.Duration\" \"int\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15030 ^int int15031] (.withNanos this15030 int15031)))\n(clojure.core/defn get-units {:arglists (quote ([\"java.time.Duration\"]))} (^java.util.List [^js/JSJoda.Duration this15032] (.units this15032)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this15033] (.nano this15033)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15034 ^long long15035] (.plusMillis this15034 long15035)))\n(clojure.core/defn to-minutes {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this15036] (.toMinutes this15036)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15037 ^long long15038] (.minusSeconds this15037 long15038)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15039 ^long long15040] (.plusNanos this15039 long15040)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Duration\" \"java.time.Duration\"] [\"java.time.Duration\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15041 ^js/JSJoda.Duration java-time-Duration15042] (.plus this15041 java-time-Duration15042)) (^js/JSJoda.Duration [^js/JSJoda.Duration this15043 ^long long15044 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15045] (.plus this15043 long15044 java-time-temporal-TemporalUnit15045)))\n(clojure.core/defn divided-by {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15046 ^long long15047] (.dividedBy this15046 long15047)))\n(clojure.core/defn plus-minutes {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15048 ^long long15049] (.plusMinutes this15048 long15049)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Duration\"]))} (^java.lang.String [^js/JSJoda.Duration this15050] (.toString this15050)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Duration\" \"java.time.Duration\"] [\"java.time.Duration\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15051 ^js/JSJoda.Duration java-time-Duration15052] (.minus this15051 java-time-Duration15052)) (^js/JSJoda.Duration [^js/JSJoda.Duration this15053 ^long long15054 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15055] (.minus this15053 long15054 java-time-temporal-TemporalUnit15055)))\n(clojure.core/defn add-to {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Duration this15056 ^js/JSJoda.Temporal java-time-temporal-Temporal15057] (.addTo this15056 java-time-temporal-Temporal15057)))\n(clojure.core/defn plus-hours {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15058 ^long long15059] (.plusHours this15058 long15059)))\n(clojure.core/defn plus-days {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15060 ^long long15061] (.plusDays this15060 long15061)))\n(clojure.core/defn of-hours {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long15062] (js-invoke java.time.Duration \"ofHours\" long15062)))\n(clojure.core/defn to-millis {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this15063] (.toMillis this15063)))\n(clojure.core/defn to-hours {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this15064] (.toHours this15064)))\n(clojure.core/defn of-nanos {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long15065] (js-invoke java.time.Duration \"ofNanos\" long15065)))\n(clojure.core/defn of-millis {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long15066] (js-invoke java.time.Duration \"ofMillis\" long15066)))\n(clojure.core/defn negated {:arglists (quote ([\"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15067] (.negated this15067)))\n(clojure.core/defn abs {:arglists (quote ([\"java.time.Duration\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15068] (.abs this15068)))\n(clojure.core/defn between {:arglists (quote ([\"java.time.temporal.Temporal\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Duration [^js/JSJoda.Temporal java-time-temporal-Temporal15069 ^js/JSJoda.Temporal java-time-temporal-Temporal15070] (js-invoke java.time.Duration \"between\" java-time-temporal-Temporal15069 java-time-temporal-Temporal15070)))\n(clojure.core/defn get-seconds {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this15071] (.seconds this15071)))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAmount\"]))} (^js/JSJoda.Duration [^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount15072] (js-invoke java.time.Duration \"from\" java-time-temporal-TemporalAmount15072)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15073 ^long long15074] (.minusNanos this15073 long15074)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Duration [^java.lang.CharSequence java-lang-CharSequence15075] (js-invoke java.time.Duration \"parse\" java-lang-CharSequence15075)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this15076] (.hashCode this15076)))\n(clojure.core/defn with-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15077 ^long long15078] (.withSeconds this15077 long15078)))\n(clojure.core/defn of-minutes {:arglists (quote ([\"long\"]))} (^js/JSJoda.Duration [^long long15079] (js-invoke java.time.Duration \"ofMinutes\" long15079)))\n(clojure.core/defn subtract-from {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Duration this15080 ^js/JSJoda.Temporal java-time-temporal-Temporal15081] (.subtractFrom this15080 java-time-temporal-Temporal15081)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Duration\" \"java.time.Duration\"]))} (^int [^js/JSJoda.Duration this15082 ^js/JSJoda.Duration java-time-Duration15083] (.compareTo this15082 java-time-Duration15083)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15084 ^long long15085] (.plusSeconds this15084 long15085)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Duration\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Duration this15086 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15087] (.get this15086 java-time-temporal-TemporalUnit15087)))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Duration\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Duration this15088 ^java.lang.Object java-lang-Object15089] (.equals this15088 java-lang-Object15089)))\n(clojure.core/defn of-seconds {:arglists (quote ([\"long\" \"long\"] [\"long\"]))} (^js/JSJoda.Duration [^long long15090 ^long long15091] (js-invoke java.time.Duration \"ofSeconds\" long15090 long15091)) (^js/JSJoda.Duration [^long long15092] (js-invoke java.time.Duration \"ofSeconds\" long15092)))\n(clojure.core/defn minus-days {:arglists (quote ([\"java.time.Duration\" \"long\"]))} (^js/JSJoda.Duration [^js/JSJoda.Duration this15093 ^long long15094] (.minusDays this15093 long15094)))\n(clojure.core/defn to-days {:arglists (quote ([\"java.time.Duration\"]))} (^long [^js/JSJoda.Duration this15095] (.toDays this15095)))\n"]}