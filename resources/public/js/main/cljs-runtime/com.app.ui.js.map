{"version":3,"sources":["com/app/ui.cljc"],"mappings":"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","names":["options__50078__auto__","this","com.fulcrologic.fulcro.components/wrapped-render","map__63487","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","props","current-route","cljs.core.get","id","current-state","com.fulcrologic.fulcro.ui-state-machines/get-active-state","state-map","com.fulcrologic.fulcro.components/component->state-map","sm-env","com.fulcrologic.fulcro.ui_state_machines.state_machine_env","pending-path-segment","com.fulcrologic.fulcro.ui-state-machines/asm-active?","com.fulcrologic.fulcro.ui_state_machines.retrieve","class","com.fulcrologic.fulcro.routing.dynamic-routing/current-route-class","cljs.core/constantly","factory","com.fulcrologic.fulcro.components.factory","G__63489","com.fulcrologic.fulcro.raw.components/computed","com.fulcrologic.fulcro.raw.components.get_computed","p__63490","map__63491","this__56443__auto__","com.fulcrologic.fulcro.routing.dynamic-routing/validate-route-targets","params","com.fulcrologic.fulcro.raw.components.get_initial_state","or__4126__auto__","com.fulcrologic.fulcro.raw.components.get_query","cljs.core.ex_info","com.fulcrologic.fulcro.raw.components/component-name","js/com","js/com.app","js/com.app.ui","js/com.app.ui.MainRouter","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","com.app.ui/MainRouter","com.app.ui.todo-forms/TodoList","com.app.ui.todo-forms/TodoForm","com.app.ui/ui-main-router","com.fulcrologic.fulcro.components/make-state-map","map__63493","js/com.app.ui.Root","com.app.ui/Root","router","com.fulcrologic.fulcro.components.get_query","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.components.fragment","com.fulcrologic.semantic-ui.modules.dropdown.ui-dropdown/ui-dropdown","com.fulcrologic.semantic-ui.modules.dropdown.ui-dropdown-menu/ui-dropdown-menu","com.fulcrologic.semantic-ui.modules.dropdown.ui-dropdown-item/ui-dropdown-item","com.fulcrologic.rad.routing/route-to!","com.fulcrologic.rad.form.create_BANG_","com.app.ui/ui-root"],"sourcesContent":["(ns com.app.ui\n  (:require\n    #?@(:cljs [[com.fulcrologic.semantic-ui.modules.dropdown.ui-dropdown :refer [ui-dropdown]]\n               [com.fulcrologic.semantic-ui.modules.dropdown.ui-dropdown-menu :refer [ui-dropdown-menu]]\n               [com.fulcrologic.semantic-ui.modules.dropdown.ui-dropdown-item :refer [ui-dropdown-item]]])\n    #?(:clj  [com.fulcrologic.fulcro.dom-server :as dom :refer [div]]\n       :cljs [com.fulcrologic.fulcro.dom :as dom :refer [div label input]])\n    [com.fulcrologic.rad.form :as form]\n    [com.app.ui.todo-forms :refer [TodoList TodoForm]]\n    [com.fulcrologic.fulcro.routing.dynamic-routing :refer [defrouter]]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.rad.routing :as rroute]))\n\n\n(defrouter MainRouter [this props]\n  {:router-targets [TodoList TodoForm]\n   :initial-route  [TodoList {}]})\n\n(def ui-main-router (comp/factory MainRouter))\n(defsc Root [this {:keys [router]}]\n  {\n   :query [{:router (comp/get-query MainRouter)}]\n   :initial-state {:router {}}}\n  (div :.ui.container.segment {:style {:marginTop \"2em\"}}\n\n       #?(:cljs\n          (comp/fragment\n            (ui-dropdown {:text \"Todo\"}\n                         (ui-dropdown-menu {}\n                                           (ui-dropdown-item {:onClick (fn [] (rroute/route-to! this TodoList {}))} \"View all\")\n                                           (ui-dropdown-item {:onClick (fn [] (form/create! this TodoForm))} \"New\")))))\n\n       (ui-main-router router)))\n\n(def ui-root (comp/factory Root))\n\n\n"]}