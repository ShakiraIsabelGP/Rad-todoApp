{"version":3,"sources":["cljc/java_time/instant.cljs"],"mappings":";AACA,AAAKA,AAAI,AAAA,AAACC,AAAgBC;AAC1B,AAAKC,AAAM,AAAA,AAACF,AAAgBC;AAC5B,AAAKE,AAAI,AAAA,AAACH,AAAgBC;AAC1B,AAAA,AAAmBG,AAAmIC,AAAkCC;AAAxL,AAA8N,AAAcD,AAAUC;;AACtP,AAAA,AAAmBC,AAAgIC,AAAmCC;AAAtL,AAA6N,AAAA,AAA4D,AAAQD,AAAUC;AAA9E,AAAA,AAAAC,AAAAC;AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAAF;;;;AAC7N,AAAA,AAAA,AAAAG,AAAmBE;AAAnB,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAmBI,AAA0FC,AAAgBC;AAA7H,AAAwI,AAAA,AAACC,AAAUjB,AAAkCe,AAAUC;;;AAA/L,AAAA,AAAA,AAAmBF,AAAmNI;AAAtO,AAAiP,AAAA,AAACD,AAAUjB,AAAkCkB;;;AAA9R,AAAA,AAAA,AAAmBJ;;AAAnB,AACA,AAAA,AAAmBK,AAA4HC,AAAgCC;AAA/K,AAA0M,AAAWD,AAAUC;;AAC/N,AAAA,AAAmBC,AAAwGC,AAAgBC;AAA3I,AAAsJ,AAAcD,AAAUC;;AAC9K,AAAA,AAAmBC,AAA+EC;AAAlG,AAA6G,AAAOA;;AACpH,AAAA,AAAmBC,AAAuGC,AAAgBC;AAA1I,AAAqJ,AAAaD,AAAUC;;AAC5K,AAAA,AAAmBC,AAAyGC,AAAgBC;AAA5I,AAAuJ,AAAeD,AAAUC;;AAChL,AAAA,AAAmBC,AAAsGC,AAAgBC;AAAzI,AAAoJ,AAAYD,AAAUC;;AAC1K,AAAA,AAAA,AAAAvB,AAAmByB;AAAnB,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA3B,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAmB2B,AAA4LC,AAAoCC;AAAnP,AAA2R,AAAA,AAA4D,AAAOD,AAAUC;AAA7E,AAAA,AAAAC,AAAA9B;AAAA,AAAAC,AAAA6B;AAAA,AAAA,AAAA,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAA6B;;;;;AAA3R,AAAA,AAAA,AAAmBH,AAAuaI,AAAgBC,AAAkCC;AAA5e,AAAkhB,AAAA,AAA4D,AAAOF,AAAUC,AAAUC;AAAvF,AAAA,AAAAC,AAAAlC;AAAA,AAAAC,AAAAiC;AAAA,AAAA,AAAA,AAAAlC,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAAiC;;;;;AAAlhB,AAAA,AAAA,AAAmBP;;AAAnB,AACA,AAAA,AAAmBQ,AAA4HC,AAAmCC;AAAlL,AAAyN,AAAQD,AAAUC;;AAC3O,AAAA,AAAmBC,AAA6FC;AAAhH,AAA2H,AAAWA;;AACtI,AAAA,AAAmBC,AAAwGC,AAA6BC;AAAxJ,AAAgL,AAAWD,AAAUC;;AACrM,AAAA,AAAA,AAAAxC,AAAmB0C;AAAnB,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA5C,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAmB4C,AAA6LC,AAAoCC;AAApP,AAA4R,AAAA,AAA4D,AAAQD,AAAUC;AAA9E,AAAA,AAAAC,AAAA/C;AAAA,AAAAC,AAAA8C;AAAA,AAAA,AAAA,AAAA/C,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAA8C;;;;;AAA5R,AAAA,AAAA,AAAmBH,AAAyaI,AAAgBC,AAAkCC;AAA9e,AAAohB,AAAA,AAA4D,AAAQF,AAAUC,AAAUC;AAAxF,AAAA,AAAAC,AAAAnD;AAAA,AAAAC,AAAAkD;AAAA,AAAA,AAAA,AAAAnD,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAAkD;;;;;AAAphB,AAAA,AAAA,AAAmBP;;AAAnB,AACA,AAAA,AAAmBQ,AAAqHC,AAA4BC;AAApK,AAA2L,AAASD,AAAUC;;AAC9M,AAAA,AAAmBC,AAAyEC;AAA5F,AAAuG,AAAA,AAACjD,AAAUjB,AAAiCkE;;AACnJ,AAAA,AAAmBC,AAAmHC,AAAmCC;AAAzK,AAAgN,AAAUD,AAAUC;;AACpO,AAAA,AAAmBC,AAA6IC,AAA8BC,AAAyDC;AAAvP,AAA6R,AAAA,AAA4D,AAAQF,AAAUC,AAAiCC;AAA/G,AAAA,AAAAC,AAAAhE;AAAA,AAAAC,AAAA+D;AAAA,AAAA,AAAA,AAAAhE,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAA+D;;;;AAC7R,AAAA,AAAmBC,AAAoHC;AAAvI,AAAiL,AAAA,AAA4D,AAAA,AAAC3D,AAAUjB,AAAyB4E;AAAhG,AAAA,AAAAC,AAAAnE;AAAA,AAAAC,AAAAkE;AAAA,AAAA,AAAA,AAAAnE,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAAkE;;;;AACjL,AAAA,AAAmBC,AAAuGC,AAA6BC;AAAvJ,AAA+K,AAAUD,AAAUC;;AACnM,AAAA,AAAmBC,AAAuGC,AAAgBC;AAA1I,AAAqJ,AAAaD,AAAUC;;AAC5K,AAAA,AAAmBC,AAA+JC,AAAUC;AAA5L,AAAsM,AAAiCD,AAAUC;;AACjP,AAAA,AAAmBC,AAAoGC;AAAvH,AAAoJ,AAAA,AAACvE,AAAUjB,AAA0BwF;;AACzL,AAAA,AAAmBC,AAAgFC;AAAnG,AAA8G,AAAWA;;AACzH,AAAA,AAAmBC,AAA+HC,AAA8BC;AAAhL,AAAkN,AAAA,AAA4D,AAAaD,AAAUC;AAAnF,AAAA,AAAAC,AAAApF;AAAA,AAAAC,AAAAmF;AAAA,AAAA,AAAA,AAAApF,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAAmF;;;;AAClN,AAAA,AAAA,AAAAlF,AAAmBoF;AAAnB,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAtF,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAmBsF,AAA+LC,AAAmCC,AAA4CC;AAAjS,AAA4S,AAAA,AAA4D,AAAOF,AAAUC,AAAsCC;AAAnH,AAAA,AAAAC,AAAA1F;AAAA,AAAAC,AAAAyF;AAAA,AAAA,AAAA,AAAA1F,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAAyF;;;;;AAA5S,AAAA,AAAA,AAAmBJ,AAAicK,AAAsCC;AAA1f,AAAoiB,AAAA,AAA4D,AAAOD,AAAUC;AAA7E,AAAA,AAAAC,AAAA7F;AAAA,AAAAC,AAAA4F;AAAA,AAAA,AAAA,AAAA7F,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAA4F;;;;;AAApiB,AAAA,AAAA,AAAmBP;;AAAnB,AACA,AAAA,AAAA,AAAApF,AAAmB6F;AAAnB,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA/F,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAmB+F;AAAnB,AAA2F,AAAA,AAACC,AAAU1G;;;AAAtG,AAAA,AAAA,AAAmByG,AAAmJE;AAAtK,AAA4L,AAAA,AAAC1F,AAAUjB,AAAwB2G;;;AAA/N,AAAA,AAAA,AAAmBF;;AAAnB,AACA,AAAA,AAAmBG,AAAsFC;AAAzG,AAAoH,AAAeA;;AACnI,AAAA,AAAmBC,AAAwFC;AAA3G,AAAsH,AAAcA;;AACpI,AAAA,AAAmBC,AAAqGC,AAA6BC;AAArJ,AAA6K,AAAYD,AAAUC;;AACnM,AAAA,AAAmBC,AAAwGC,AAAgBC;AAA3I,AAAsJ,AAAcD,AAAUC;;AAC9K,AAAA,AAAmBC,AAA6GC,AAAmCC;AAAnK,AAA0M,AAAA,AAA4D,AAAMD,AAAUC;AAA5E,AAAA,AAAAC,AAAA/G;AAAA,AAAAC,AAAA8G;AAAA,AAAA,AAAA,AAAA/G,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAA,AAAAZ,AAAAY,AAAA;;AAAA,AAAA,AAAA8G;;;;AAC1M,AAAA,AAAmBC,AAAoGC,AAA4BC;AAAnJ,AAA0K,AAASD,AAAUC","names":["cljc.java-time.instant/min","goog.object/get","java.time/Instant","cljc.java-time.instant/epoch","cljc.java-time.instant/max","cljc.java-time.instant/truncated-to","this14122","java-time-temporal-TemporalUnit14123","cljc.java-time.instant/range","this14124","java-time-temporal-TemporalField14125","e72100","js/Error","e__72092__auto__","var_args","G__72102","cljc.java-time.instant/of-epoch-second","long14126","long14127","cljs.core.js_invoke","long14128","cljc.java-time.instant/at-offset","this14129","java-time-ZoneOffset14130","cljc.java-time.instant/minus-millis","this14131","long14132","cljc.java-time.instant/get-nano","this14133","cljc.java-time.instant/plus-millis","this14134","long14135","cljc.java-time.instant/minus-seconds","this14136","long14137","cljc.java-time.instant/plus-nanos","this14138","long14139","G__72104","cljc.java-time.instant/plus","this14140","java-time-temporal-TemporalAmount14141","e72105","this14142","long14143","java-time-temporal-TemporalUnit14144","e72106","cljc.java-time.instant/query","this14145","java-time-temporal-TemporalQuery14146","cljc.java-time.instant/to-string","this14147","cljc.java-time.instant/is-before","this14148","java-time-Instant14149","G__72108","cljc.java-time.instant/minus","this14150","java-time-temporal-TemporalAmount14151","e72109","this14152","long14153","java-time-temporal-TemporalUnit14154","e72110","cljc.java-time.instant/at-zone","this14155","java-time-ZoneId14156","cljc.java-time.instant/of-epoch-milli","long14157","cljc.java-time.instant/get-long","this14158","java-time-temporal-TemporalField14159","cljc.java-time.instant/until","this14160","java-time-temporal-Temporal14161","java-time-temporal-TemporalUnit14162","e72111","cljc.java-time.instant/from","java-time-temporal-TemporalAccessor14163","e72112","cljc.java-time.instant/is-after","this14164","java-time-Instant14165","cljc.java-time.instant/minus-nanos","this14166","long14167","cljc.java-time.instant/is-supported","this14168","G__14169","cljc.java-time.instant/parse","java-lang-CharSequence14170","cljc.java-time.instant/hash-code","this14171","cljc.java-time.instant/adjust-into","this14172","java-time-temporal-Temporal14173","e72115","G__72117","cljc.java-time.instant/with","this14174","java-time-temporal-TemporalField14175","long14176","e72118","this14177","java-time-temporal-TemporalAdjuster14178","e72119","G__72121","cljc.java-time.instant/now","cljs.core/js-invoke","java-time-Clock14179","cljc.java-time.instant/to-epoch-milli","this14180","cljc.java-time.instant/get-epoch-second","this14181","cljc.java-time.instant/compare-to","this14182","java-time-Instant14183","cljc.java-time.instant/plus-seconds","this14184","long14185","cljc.java-time.instant/get","this14186","java-time-temporal-TemporalField14187","e72122","cljc.java-time.instant/equals","this14188","java-lang-Object14189"],"sourcesContent":["(ns cljc.java-time.instant (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time :refer [Instant]]))\n(def min (goog.object/get java.time.Instant \"MIN\"))\n(def epoch (goog.object/get java.time.Instant \"EPOCH\"))\n(def max (goog.object/get java.time.Instant \"MAX\"))\n(clojure.core/defn truncated-to {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14122 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14123] (.truncatedTo this14122 java-time-temporal-TemporalUnit14123)))\n(clojure.core/defn range {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Instant this14124 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14125] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.range this14124 java-time-temporal-TemporalField14125))))\n(clojure.core/defn of-epoch-second {:arglists (quote ([\"long\" \"long\"] [\"long\"]))} (^js/JSJoda.Instant [^long long14126 ^long long14127] (js-invoke java.time.Instant \"ofEpochSecond\" long14126 long14127)) (^js/JSJoda.Instant [^long long14128] (js-invoke java.time.Instant \"ofEpochSecond\" long14128)))\n(clojure.core/defn at-offset {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneOffset\"]))} (^js/JSJoda.OffsetDateTime [^js/JSJoda.Instant this14129 ^js/JSJoda.ZoneOffset java-time-ZoneOffset14130] (.atOffset this14129 java-time-ZoneOffset14130)))\n(clojure.core/defn minus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14131 ^long long14132] (.minusMillis this14131 long14132)))\n(clojure.core/defn get-nano {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this14133] (.nano this14133)))\n(clojure.core/defn plus-millis {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14134 ^long long14135] (.plusMillis this14134 long14135)))\n(clojure.core/defn minus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14136 ^long long14137] (.minusSeconds this14136 long14137)))\n(clojure.core/defn plus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14138 ^long long14139] (.plusNanos this14138 long14139)))\n(clojure.core/defn plus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14140 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14141] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this14140 java-time-temporal-TemporalAmount14141))) (^js/JSJoda.Instant [^js/JSJoda.Instant this14142 ^long long14143 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14144] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.plus this14142 long14143 java-time-temporal-TemporalUnit14144))))\n(clojure.core/defn query {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalQuery\"]))} (^java.lang.Object [^js/JSJoda.Instant this14145 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery14146] (.query this14145 java-time-temporal-TemporalQuery14146)))\n(clojure.core/defn to-string {:arglists (quote ([\"java.time.Instant\"]))} (^java.lang.String [^js/JSJoda.Instant this14147] (.toString this14147)))\n(clojure.core/defn is-before {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this14148 ^js/JSJoda.Instant java-time-Instant14149] (.isBefore this14148 java-time-Instant14149)))\n(clojure.core/defn minus {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalAmount\"] [\"java.time.Instant\" \"long\" \"java.time.temporal.TemporalUnit\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14150 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount14151] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this14150 java-time-temporal-TemporalAmount14151))) (^js/JSJoda.Instant [^js/JSJoda.Instant this14152 ^long long14153 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14154] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.minus this14152 long14153 java-time-temporal-TemporalUnit14154))))\n(clojure.core/defn at-zone {:arglists (quote ([\"java.time.Instant\" \"java.time.ZoneId\"]))} (^js/JSJoda.ZonedDateTime [^js/JSJoda.Instant this14155 ^js/JSJoda.ZoneId java-time-ZoneId14156] (.atZone this14155 java-time-ZoneId14156)))\n(clojure.core/defn of-epoch-milli {:arglists (quote ([\"long\"]))} (^js/JSJoda.Instant [^long long14157] (js-invoke java.time.Instant \"ofEpochMilli\" long14157)))\n(clojure.core/defn get-long {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^long [^js/JSJoda.Instant this14158 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14159] (.getLong this14158 java-time-temporal-TemporalField14159)))\n(clojure.core/defn until {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\" \"java.time.temporal.TemporalUnit\"]))} (^long [^js/JSJoda.Instant this14160 ^js/JSJoda.Temporal java-time-temporal-Temporal14161 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit14162] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.until this14160 java-time-temporal-Temporal14161 java-time-temporal-TemporalUnit14162))))\n(clojure.core/defn from {:arglists (quote ([\"java.time.temporal.TemporalAccessor\"]))} (^js/JSJoda.Instant [^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor14163] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (js-invoke java.time.Instant \"from\" java-time-temporal-TemporalAccessor14163))))\n(clojure.core/defn is-after {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^boolean [^js/JSJoda.Instant this14164 ^js/JSJoda.Instant java-time-Instant14165] (.isAfter this14164 java-time-Instant14165)))\n(clojure.core/defn minus-nanos {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14166 ^long long14167] (.minusNanos this14166 long14167)))\n(clojure.core/defn is-supported {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"] [\"java.time.Instant\" \"java.time.temporal.TemporalUnit\"]))} (^boolean [this14168 G__14169] (.isSupported ^js/JSJoda.Instant this14168 G__14169)))\n(clojure.core/defn parse {:arglists (quote ([\"java.lang.CharSequence\"]))} (^js/JSJoda.Instant [^java.lang.CharSequence java-lang-CharSequence14170] (js-invoke java.time.Instant \"parse\" java-lang-CharSequence14170)))\n(clojure.core/defn hash-code {:arglists (quote ([\"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this14171] (.hashCode this14171)))\n(clojure.core/defn adjust-into {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.Temporal\"]))} (^js/JSJoda.Temporal [^js/JSJoda.Instant this14172 ^js/JSJoda.Temporal java-time-temporal-Temporal14173] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.adjustInto this14172 java-time-temporal-Temporal14173))))\n(clojure.core/defn with {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\" \"long\"] [\"java.time.Instant\" \"java.time.temporal.TemporalAdjuster\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14174 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14175 ^long long14176] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this14174 java-time-temporal-TemporalField14175 long14176))) (^js/JSJoda.Instant [^js/JSJoda.Instant this14177 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster14178] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.with this14177 java-time-temporal-TemporalAdjuster14178))))\n(clojure.core/defn now {:arglists (quote ([] [\"java.time.Clock\"]))} (^js/JSJoda.Instant [] (js-invoke java.time.Instant \"now\")) (^js/JSJoda.Instant [^js/JSJoda.Clock java-time-Clock14179] (js-invoke java.time.Instant \"now\" java-time-Clock14179)))\n(clojure.core/defn to-epoch-milli {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this14180] (.toEpochMilli this14180)))\n(clojure.core/defn get-epoch-second {:arglists (quote ([\"java.time.Instant\"]))} (^long [^js/JSJoda.Instant this14181] (.epochSecond this14181)))\n(clojure.core/defn compare-to {:arglists (quote ([\"java.time.Instant\" \"java.time.Instant\"]))} (^int [^js/JSJoda.Instant this14182 ^js/JSJoda.Instant java-time-Instant14183] (.compareTo this14182 java-time-Instant14183)))\n(clojure.core/defn plus-seconds {:arglists (quote ([\"java.time.Instant\" \"long\"]))} (^js/JSJoda.Instant [^js/JSJoda.Instant this14184 ^long long14185] (.plusSeconds this14184 long14185)))\n(clojure.core/defn get {:arglists (quote ([\"java.time.Instant\" \"java.time.temporal.TemporalField\"]))} (^int [^js/JSJoda.Instant this14186 ^js/JSJoda.TemporalField java-time-temporal-TemporalField14187] (cljc.java-time.extn.calendar-awareness/calendar-aware-cljs (.get this14186 java-time-temporal-TemporalField14187))))\n(clojure.core/defn equals {:arglists (quote ([\"java.time.Instant\" \"java.lang.Object\"]))} (^boolean [^js/JSJoda.Instant this14188 ^java.lang.Object java-lang-Object14189] (.equals this14188 java-lang-Object14189)))\n"]}