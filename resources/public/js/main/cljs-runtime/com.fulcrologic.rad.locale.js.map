{"version":3,"sources":["com/fulcrologic/rad/locale.cljc"],"mappings":";AAQA;;;AAAA,AAAeA;AAKf,AAAA,AAAMC;AAAN,AAAwBD;;AAExB;;;AAAA,AAAME,AAEHC;AAFH,AAMK,AAAMH,AAAiBG","names":["com.fulcrologic.rad.locale/*current-locale*","com.fulcrologic.rad.locale/current-locale","com.fulcrologic.rad.locale/set-locale!","code"],"sourcesContent":["(ns com.fulcrologic.rad.locale\n  #?(:cljs (:require-macros com.fulcrologic.rad.locale))\n  (:require\n    #?@(:cljs [[goog.object :as gobj]]\n        :clj  [[com.fulcrologic.fulcro.components :as comp]]))\n  #?(:clj\n     (:import (java.util Locale))))\n\n(def ^:dynamic *current-locale*\n  \"The current locale. In CLJ this will be a Locale object. In CLJS this will be a locale string like en-US.\"\n  #?(:clj  (Locale/getDefault)\n     :cljs \"en-US\"))\n\n(defn current-locale [] *current-locale*)\n\n(defn set-locale!\n  \"Set the locale of the application to the given locale code, e.g. `en-US`.\"\n  [code]\n  #?(:clj\n     (alter-var-root (var *current-locale*) (constantly (Locale/forLanguageTag code)))\n     :cljs\n     (set! *current-locale* code)))\n\n#?(:clj\n   (defmacro with-locale [nm & body]\n     (let [locale-expr (if (comp/cljs? &env)\n                         nm\n                         `(java.util.Locale/forLanguageTag ~nm))]\n       `(binding [*current-locale* ~locale-expr]\n          ~@body))))\n\n"]}