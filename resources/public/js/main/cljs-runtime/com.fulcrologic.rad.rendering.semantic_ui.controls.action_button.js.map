{"version":3,"sources":["com/fulcrologic/rad/rendering/semantic_ui/controls/action_button.cljc"],"mappings":";AAYA,AAAA,AAAA;AAAA,AAAAA,AAAA,AAAA,AAC0B,AAAKmB,AAAEA,AAAEA;AAAT,AAAA;AAD1B,AAAA,AAAqBA;AAArB,AAAA,AAAAlB,AAAA,AAAqBkB;AAArB,AAAA,AAAAjB,AAAA,AAAAC,AAAAA,AAAAA,AAAqBgB,AAAAA;AAArBjB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AAA+BkB;AAA/B,AAAAb,AAAAL,AAAA,AAAwCmB;AAAxC,AAEE,AAAME,AAAS,AAACC,AAA2BJ;AACrCK,AAAS,AAACC,AAA0BN,AAASO;AAC7CC,AAAS,AAACzB,AAAAA,AAAAA,AAAWiB,AAAAA;AAF3BE,AAGuE,AAACf,AAAIgB,AAASF;AAHrFC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAlB,AAAA,AAAAkB,AAAA,AAAA,AAAA,AAAA,AAAAjB,AAAAC,AAAAgB,AAAAA;AAAAA,AAG8Da;AAH9D,AAAA5B,AAAAe,AAAA,AAGcO;AAHd,AAAAtB,AAAAe,AAAA,AAGoBQ;AAHpB,AAAAvB,AAAAe,AAAA,AAGyBS;AAHzB,AAAAxB,AAAAe,AAAA,AAG+BU;AAH/B,AAAAzB,AAAAe,AAAA,AAGsCW;AAHtC,AAAA1B,AAAAe,AAAA,AAGgDY;AAHhD,AAIE,AAAMC;AAAN,AACE,AAAMN,AAAU,AAACO,AAAGP,AAAMT;AACpBW,AAAU,AAACK,AAAGL,AAAMX;AACpBiB,AAAU,AAACC,AAAY,AAAA,AAACC,AAAOX,AAAOY,AAAgB,AAACC,AAAAA,AAAAA,AAAerB,AAAAA;AACtEa,AAAU,AAAAS,AAAIL;AAAJ,AAAA,AAAAK;AAAAA;;AAAa,AAACN,AAAGH,AAAUb;;;AACrCc,AAAU,AAAAQ,AAAI,AAAA,AAAMR;AAAV,AAAA,AAAAQ;AAAAA;;AAAoB,AAACN,AAAGF,AAASd;;;AAC3CuB,AAAU;AAAA,AAAO,AAAMX;AAAN,AAAa,AAACA,AAAAA,AAAAA,AAAOZ,AAAAA,AAASC,AAAAA;;AAA9B;;;AALvB,AAME,AAAMa;AAAN,AACE,AAAAQ,AACE,AAACN,AAAGX,AAAOL,AAAS,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACwB,AAAMT,AACOd,AACAQ,AACAE,AACAY,AACAV,AACAI;AAPpC,AAAA,AAAAK;AAAAA;;AAQE,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAA,AACc,AAAKxB,AACL,AAAAqB,AAAIX;AAAJ,AAAA,AAAAW;AAAAA;;AAAA;;AAFd,AAAA,AAAA,AAGc,AAACI,AAAQb,AACTU,AACZ,AAAA,AAAA,AAAMb,AAAK,AAAAe,AAAA,AAAA,AAAA,AAAA,AAAA,AAAmB,AAAA,AAAKf,AACnC,AAAA,AAAA,AAAMD,AAAMA;;;AAflB;;;AAPJ;;;;AANJ,AAAA,AAAA,AAAArB,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA;;;AAAA,AAAAC,AAAA,AAAAT,AAAAP,AAAA,AAAOkB;;;AAAP,AAAAD,AAAA,AAAAjB,AAAOkB;AA8BP,AAAK6B,AAAe,AAAA,AAAA,AAAA,AAACC,AAAa9B","names":["options__56259__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__89171","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/com","js/com.fulcrologic","js/com.fulcrologic.rad","js/com.fulcrologic.rad.rendering","js/com.fulcrologic.rad.rendering.semantic-ui","js/com.fulcrologic.rad.rendering.semantic-ui.controls","js/com.fulcrologic.rad.rendering.semantic-ui.controls.action-button","js/com.fulcrologic.rad.rendering.semantic-ui.controls.action-button.ActionButton","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","com.fulcrologic.rad.rendering.semantic-ui.controls.action-button/ActionButton","_","instance","control-key","map__89173","controls","com.fulcrologic.rad.control.component_controls","render","com.fulcrologic.rad.semantic_ui_options.get_rendering_options","com.fulcrologic.rad.semantic-ui-options/action-button-render","props","label","icon","class","action","disabled?","visible?","control","com.fulcrologic.rad.options_util._QMARK__BANG_","loading?","com.fulcrologic.fulcro.data-fetch/loading?","cljs.core.get_in","com.fulcrologic.fulcro.data-fetch/marker-table","com.fulcrologic.fulcro.components/get-ident","or__4126__auto__","onClick","cljs.core.merge","com.fulcrologic.fulcro.dom.macro_create_element","cljs.core/boolean","com.fulcrologic.rad.rendering.semantic-ui.controls.action-button/render-control","com.fulcrologic.fulcro.components.factory"],"sourcesContent":["(ns com.fulcrologic.rad.rendering.semantic-ui.controls.action-button\n  (:require\n    [taoensso.timbre :as log]\n    [com.fulcrologic.rad.report :as report]\n    [com.fulcrologic.rad.options-util :refer [?!]]\n    [com.fulcrologic.rad.semantic-ui-options :as suo]\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [com.fulcrologic.rad.control :as control]\n    #?(:cljs [com.fulcrologic.fulcro.dom :as dom]\n       :clj  [com.fulcrologic.fulcro.dom-server :as dom])\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]))\n\n(defsc ActionButton [_ {:keys [instance control-key]}]\n  {:shouldComponentUpdate (fn [_ _ _] true)}\n  (let [controls (control/component-controls instance)\n        render   (suo/get-rendering-options instance suo/action-button-render)\n        props    (comp/props instance)\n        {:keys [label icon class action disabled? visible?] :as control} (get controls control-key)]\n    (when control\n      (let [label     (?! label instance)\n            class     (?! class instance)\n            loading?  (df/loading? (get-in props [df/marker-table (comp/get-ident instance)]))\n            disabled? (or loading? (?! disabled? instance))\n            visible?  (or (nil? visible?) (?! visible? instance))\n            onClick   (fn [] (when action (action instance control-key)))]\n        (when visible?\n          (or\n            (?! render instance (merge control\n                                  {:key       control-key\n                                   :label     label\n                                   :class     class\n                                   :onClick   onClick\n                                   :disabled? disabled?\n                                   :loading?  loading?}))\n            (dom/button\n              {:key       (str control-key)\n               :className (or class \"ui tiny primary button\")\n               :disabled  (boolean disabled?)\n               :onClick   onClick}\n              (when icon (dom/i {:className (str icon \" icon\")}))\n              (when label label))))))))\n\n(def render-control (comp/factory ActionButton {:keyfn :control-key}))\n"]}